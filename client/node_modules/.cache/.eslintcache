[{"E:\\Codes\\Github\\Lending App\\client\\src\\index.js":"1","E:\\Codes\\Github\\Lending App\\client\\src\\reportWebVitals.js":"2","E:\\Codes\\Github\\Lending App\\client\\src\\App.js":"3","E:\\Codes\\Github\\Lending App\\client\\src\\components\\sidebar\\Sidebar.jsx":"4","E:\\Codes\\Github\\Lending App\\client\\src\\components\\topbar\\Topbar.jsx":"5","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\Dashboard.jsx":"6","E:\\Codes\\Github\\Lending App\\client\\src\\components\\landing\\Landing.jsx":"7","E:\\Codes\\Github\\Lending App\\client\\src\\components\\auths\\Login.jsx":"8","E:\\Codes\\Github\\Lending App\\client\\src\\components\\auths\\Register.jsx":"9","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\Home.jsx":"10","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\loans\\ClientLoans.jsx":"11","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\loans\\AddLoan.jsx":"12","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\borrowers\\Borrower.jsx":"13","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\borrowers\\AddBorrower.jsx":"14","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\borrowers\\EditBorrower.jsx":"15","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\borrowers\\Borrowers.jsx":"16","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\loans\\EditLoan.jsx":"17","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\loans\\ClientsLoans.jsx.jsx":"18","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\borrowers\\Account.jsx":"19","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\loans\\Loan.jsx":"20","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\loans\\AddLoans.jsx":"21","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\payments\\ListPayments.jsx":"22","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\payments\\AddPayments.jsx":"23","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\payments\\AllPayments.jsx":"24","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\payments\\UpdateBalance.jsx":"25","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\messages\\Message.jsx":"26","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\messages\\GetBorrowers.jsx":"27","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\messages\\EmailPage.jsx":"28","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\loans\\OneLoan.jsx":"29","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\payments\\PaymentLoanInfo.jsx":"30","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\bottom\\BotWidget.jsx":"31","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\top\\TopWidget.jsx":"32","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\top\\ClientsWidget.jsx":"33","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\top\\PaymentsWidget.jsx":"34","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\top\\LoansWidget.jsx":"35","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\bottom\\DatesWidget.jsx":"36","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\bottom\\ApprovalWidget.jsx":"37"},{"size":535,"mtime":1673194636761,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":1673194637321,"results":"40","hashOfConfig":"39"},{"size":7521,"mtime":1673772344611,"results":"41","hashOfConfig":"39"},{"size":3172,"mtime":1673929362019,"results":"42","hashOfConfig":"39"},{"size":1075,"mtime":1673254939727,"results":"43","hashOfConfig":"39"},{"size":204,"mtime":1673345873680,"results":"44","hashOfConfig":"39"},{"size":41069,"mtime":1673949490664,"results":"45","hashOfConfig":"39"},{"size":3685,"mtime":1673204593460,"results":"46","hashOfConfig":"39"},{"size":5314,"mtime":1673198989478,"results":"47","hashOfConfig":"39"},{"size":1173,"mtime":1673862733034,"results":"48","hashOfConfig":"39"},{"size":923,"mtime":1673668729609,"results":"49","hashOfConfig":"39"},{"size":7217,"mtime":1673486391973,"results":"50","hashOfConfig":"39"},{"size":4710,"mtime":1673362060245,"results":"51","hashOfConfig":"39"},{"size":6117,"mtime":1673855312476,"results":"52","hashOfConfig":"39"},{"size":4442,"mtime":1673419590021,"results":"53","hashOfConfig":"39"},{"size":5427,"mtime":1673356128947,"results":"54","hashOfConfig":"39"},{"size":7937,"mtime":1673669703563,"results":"55","hashOfConfig":"39"},{"size":6351,"mtime":1673863134161,"results":"56","hashOfConfig":"39"},{"size":3207,"mtime":1673345330274,"results":"57","hashOfConfig":"39"},{"size":9522,"mtime":1673764340789,"results":"58","hashOfConfig":"39"},{"size":7522,"mtime":1673447192213,"results":"59","hashOfConfig":"39"},{"size":4975,"mtime":1673701864465,"results":"60","hashOfConfig":"39"},{"size":6670,"mtime":1673767225175,"results":"61","hashOfConfig":"39"},{"size":6699,"mtime":1673538079046,"results":"62","hashOfConfig":"39"},{"size":2552,"mtime":1673694376749,"results":"63","hashOfConfig":"39"},{"size":3195,"mtime":1673918752309,"results":"64","hashOfConfig":"39"},{"size":5124,"mtime":1673872092175,"results":"65","hashOfConfig":"39"},{"size":364,"mtime":1673872075525,"results":"66","hashOfConfig":"39"},{"size":4476,"mtime":1673698513632,"results":"67","hashOfConfig":"39"},{"size":5637,"mtime":1673766441335,"results":"68","hashOfConfig":"39"},{"size":303,"mtime":1673794293962,"results":"69","hashOfConfig":"39"},{"size":374,"mtime":1673857501235,"results":"70","hashOfConfig":"39"},{"size":1635,"mtime":1673862394952,"results":"71","hashOfConfig":"39"},{"size":3097,"mtime":1673862433018,"results":"72","hashOfConfig":"39"},{"size":1690,"mtime":1673862412379,"results":"73","hashOfConfig":"39"},{"size":4513,"mtime":1673863617643,"results":"74","hashOfConfig":"39"},{"size":3856,"mtime":1673863646182,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"twnk9g",{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"79"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"79"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"79"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"79"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"79"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"79"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"79"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"79"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"79"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"79"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"79"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"79"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"79"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"79"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"79"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"79"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"79"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"79"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"79"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"79"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"79"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"79"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"79"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"79"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"79"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"79"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"79"},"E:\\Codes\\Github\\Lending App\\client\\src\\index.js",[],[],[],"E:\\Codes\\Github\\Lending App\\client\\src\\reportWebVitals.js",[],[],"E:\\Codes\\Github\\Lending App\\client\\src\\App.js",["215","216","217"],[],"import './App.css';\nimport React, { Fragment, useState } from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\n\nimport Topbar from './components/topbar/Topbar';\nimport Sidebar from './components/sidebar/Sidebar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Home from './components/dashboard/pages/home/Home';\nimport Login from './components/auths/Login';\nimport Landing from './components/landing/Landing';\n\nimport Register from './components/auths/Register';\n\nimport GetAllLoans from './components/dashboard/pages/loans/ClientLoans';\nimport AddLoan from './components/dashboard/pages/loans/AddLoan';\nimport AddBorrower from './components/dashboard/pages/borrowers/AddBorrower';\nimport Borrower from './components/dashboard/pages/borrowers/Borrower';\nimport Borrowers from './components/dashboard/pages/borrowers/Borrowers';\nimport EditLoan from './components/dashboard/pages/loans/EditLoan';\nimport EditBorrower from './components/dashboard/pages/borrowers/EditBorrower';\nimport AddLoans from './components/dashboard/pages/loans/AddLoans';\nimport AddPayments from './components/dashboard/pages/payments/AddPayments';\nimport Payments from './components/dashboard/pages/payments/AllPayments';\nimport Message from './components/dashboard/pages/messages/Message';\nimport EmailPage from './components/dashboard/pages/messages/EmailPage';\nimport PaymentLoansInfo from './components/dashboard/pages/payments/PaymentLoanInfo';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = (boolean) => {\n    setIsAuthenticated(boolean);\n  };\n  return (\n    <Router>\n      <div className='App'>\n        <Topbar />\n        <div>\n          <Fragment>\n            <Routes>\n              {/* LANDING */}\n              <Route\n                exact\n                path='/'\n                element={\n                  !isAuthenticated ? <Landing /> : <Navigate to='/login' />\n                }\n              ></Route>\n\n              {/* REGISTER */}\n              <Route\n                exact\n                path='/register'\n                element={\n                  !isAuthenticated ? (\n                    <Register setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/home' />\n                  )\n                }\n              ></Route>\n\n              {/* LOGIN */}\n              <Route\n                exact\n                path='/login'\n                element={\n                  !isAuthenticated ? (\n                    <Login setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/home' />\n                  )\n                }\n              ></Route>\n\n              {/* HOME */}\n              <Route\n                exact\n                path='/home'\n                element={\n                  isAuthenticated ? (\n                    <Home setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/login' />\n                  )\n                }\n              ></Route>\n\n              {/* DASHBOARD */}\n              <Route\n                exact\n                path='/dashboard'\n                element={\n                  !isAuthenticated ? (\n                    <Dashboard setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/login' />\n                  )\n                }\n              ></Route>\n\n              {/* BORROWERS */}\n              {/* <Route exact path='/borrowers' element={<Borrowers />}></Route> */}\n\n              <Route\n                exact\n                path='/borrowers'\n                element={\n                  isAuthenticated ? (\n                    <Borrowers setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/home' />\n                  )\n                }\n              ></Route>\n\n              {/* BORROWER */}\n\n              <Route\n                exact\n                path='/borrower/:id'\n                element={\n                  isAuthenticated ? (\n                    <Borrower setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/borrowers' />\n                  )\n                }\n              ></Route>\n\n              {/* EDIT BORROWER */}\n              <Route\n                exact\n                path='/editBorrower/:id'\n                element={\n                  isAuthenticated ? (\n                    <EditBorrower setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/borrower' />\n                  )\n                }\n              ></Route>\n\n              {/* ADD BORROWER */}\n              <Route\n                exact\n                path='/addBorrower'\n                element={\n                  isAuthenticated ? (\n                    <AddBorrower setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/borrowers' />\n                  )\n                }\n              ></Route>\n\n              {/* LOANS */}\n              <Route exact path='/loans' element={<GetAllLoans />}></Route>\n\n              {/* ADD LOAN (BORROWER PAGE)*/}\n              <Route\n                exact\n                path='/addLoan/:id'\n                element={\n                  isAuthenticated ? (\n                    <AddLoan setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/loans' />\n                  )\n                }\n              ></Route>\n\n              {/* ADD LOANS (LOANS PAGE) */}\n              <Route\n                exact\n                path='/addLoan'\n                element={\n                  isAuthenticated ? (\n                    <AddLoans setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/loans' />\n                  )\n                }\n              ></Route>\n\n              {/* EDIT LOANS */}\n              <Route\n                exact\n                path='/editLoan/:id'\n                element={\n                  isAuthenticated ? (\n                    <EditLoan setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/loans' />\n                  )\n                }\n              ></Route>\n\n              {/* PAYMENTS */}\n              {/* ALL PAYMENTS */}\n              <Route exact path='/payments' element={<Payments />}></Route>\n\n              {/* ADD PAYMENT (BORROWER PAGE)*/}\n              <Route\n                exact\n                path='/addPayments/:id'\n                element={\n                  isAuthenticated ? (\n                    <PaymentLoansInfo setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/loans' />\n                  )\n                }\n              ></Route>\n\n              <Route\n                exact\n                path='/payment/:client_id/:loan_id'\n                element={\n                  isAuthenticated ? (\n                    <PaymentLoansInfo setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/loans' />\n                  )\n                }\n              ></Route>\n\n              {/* MESSAGES */}\n              <Route\n                exact\n                path='/emailClient'\n                element={\n                  isAuthenticated ? (\n                    <EmailPage setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/home' />\n                  )\n                }\n              ></Route>\n            </Routes>\n          </Fragment>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\sidebar\\Sidebar.jsx",["218"],[],"E:\\Codes\\Github\\Lending App\\client\\src\\components\\topbar\\Topbar.jsx",[],[],"E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\Dashboard.jsx",[],[],"E:\\Codes\\Github\\Lending App\\client\\src\\components\\landing\\Landing.jsx",["219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257"],[],"E:\\Codes\\Github\\Lending App\\client\\src\\components\\auths\\Login.jsx",[],[],"E:\\Codes\\Github\\Lending App\\client\\src\\components\\auths\\Register.jsx",["258","259"],[],"import React, { useState } from 'react';\r\n\r\nconst Register = ({ setAuth }) => {\r\n  const [inputs, setInputs] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    address: '',\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  const {\r\n    firstname,\r\n    lastname,\r\n    contactNumber,\r\n    address,\r\n    email,\r\n    username,\r\n    password,\r\n  } = inputs;\r\n\r\n  const onChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = {\r\n        firstname,\r\n        lastname,\r\n        contactNumber,\r\n        address,\r\n        email,\r\n        username,\r\n        password,\r\n      };\r\n\r\n      const response = await fetch('http://localhost:8000/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.token) {\r\n        localStorage.setItem('token', parseRes.token);\r\n        console.log(parseRes.token);\r\n        setAuth(true);\r\n      } else {\r\n        setAuth(false);\r\n        console.log('Something wrong');\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <div className='bg-grey-lighter min-h-screen flex flex-col'>\r\n      <div className='container max-w-md mx-auto flex-1 flex flex-col items-center justify-center px-2'>\r\n        <div className='bg-white px-6 py-8 rounded shadow-md text-black w-full'>\r\n          <h1 className='lock uppercase tracking-wide  text-black-500 text-3xl font-bold my-16 text-center'>\r\n            Welcome to <span className='text-red-500'>Maogma</span>\r\n          </h1>\r\n          <form\r\n            onSubmit={(e) => {\r\n              onSubmit(e);\r\n            }}\r\n          >\r\n            <input\r\n              type='text'\r\n              className='block border border-grey-500 w-full p-3 rounded mb-4'\r\n              name='firstname'\r\n              value={firstname}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='First Name'\r\n            />\r\n\r\n            <input\r\n              type='text'\r\n              className='block border border-grey-500 w-full p-3 rounded mb-4'\r\n              name='lastname'\r\n              value={lastname}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Last Name'\r\n            />\r\n            <input\r\n              type='number'\r\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\r\n              name='contactNumber'\r\n              value={contactNumber}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Contact Number'\r\n            />\r\n            <input\r\n              type='text'\r\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\r\n              name='address'\r\n              value={address}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Address'\r\n            />\r\n            <input\r\n              type='email'\r\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\r\n              name='email'\r\n              value={email}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Email'\r\n            />\r\n\r\n            <input\r\n              type='text'\r\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\r\n              name='username'\r\n              value={username}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Username'\r\n            />\r\n            <input\r\n              type='password'\r\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\r\n              name='password'\r\n              value={password}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Password'\r\n            />\r\n            <button\r\n              type='submit'\r\n              className='w-full text-center py-3 rounded bg-red-500 text-white hover:bg-red-700 focus:outline-none my-1'\r\n            >\r\n              Create Account\r\n            </button>\r\n          </form>\r\n\r\n          <div className='text-center text-sm text-grey-500 mt-4'>\r\n            By signing up, you agree to the\r\n            <a\r\n              className='no-underline border-b border-grey-500 text-grey-500'\r\n              href='#'\r\n            >\r\n              Terms of Service\r\n            </a>{' '}\r\n            and\r\n            <a\r\n              className='no-underline border-b border-grey-500 text-grey-500'\r\n              href='#'\r\n            >\r\n              Privacy Policy\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='text-grey-dark mt-6'>\r\n          Already have an account?\r\n          <a\r\n            className='no-underline border-b border-blue text-blue'\r\n            href='../login/'\r\n          >\r\n            Log in\r\n          </a>\r\n          .\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\Home.jsx",["260","261","262"],[],"import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\nimport BotWidget from './bottom/BotWidget';\r\nimport ClientsWidget from './top/ClientsWidget';\r\nimport TopWidget from './top/TopWidget';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className='flex'>\r\n      <Sidebar />\r\n      <div className='w-full px-8 pt-6 pb-8 mb-4 bg-white'>\r\n        <div className='px-4 py-5 sm:px-6 bg-red-500 flex justify-between items-center'>\r\n          <div>\r\n            <h3 className='text-xl font-medium leading-6 text-white'>\r\n              WELCOME Admin\r\n            </h3>\r\n            <span className='text-md font-medium leading-6 text-white'>\r\n              Logged in: {new Date().toLocaleTimeString()}\r\n            </span>\r\n          </div>\r\n          <span className='text-lg font-medium leading-6 text-white'>\r\n            {new Date().toLocaleString('en-US', {\r\n              day: 'numeric',\r\n              month: 'long',\r\n              year: 'numeric',\r\n            }) + ''}\r\n          </span>\r\n        </div>\r\n        <TopWidget />\r\n        <BotWidget />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\loans\\ClientLoans.jsx",["263"],[],"import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\nimport GetAllLoans from './ClientsLoans.jsx.jsx';\r\n\r\nconst Loans = ({ setAuth }) => {\r\n  const [loans, setLoans] = useState([]);\r\n\r\n  const GetLoans = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/allLoans/', {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setLoans(parseRes);\r\n      // console.log(parseRes);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    GetLoans();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='flex'>\r\n      <div>\r\n        <Sidebar />\r\n      </div>\r\n\r\n      <div className='w-full'>\r\n        <GetAllLoans />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loans;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\loans\\AddLoan.jsx",["264"],[],"import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\n\r\nconst AddLoan = () => {\r\n  const [inputs, setInputs] = useState({\r\n    status: '',\r\n    type: '',\r\n    gross_loan: '',\r\n    balance: '',\r\n    amort: '',\r\n    terms: '',\r\n    date_released: '',\r\n    maturity_date: '',\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const {\r\n    status,\r\n    type,\r\n    gross_loan,\r\n    balance,\r\n    amort,\r\n    terms,\r\n    date_released,\r\n    maturity_date,\r\n  } = inputs;\r\n\r\n  const location = useLocation();\r\n\r\n  const clientId = location.pathname.split('/')[2];\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = {\r\n        type,\r\n        status,\r\n        gross_loan,\r\n        balance,\r\n        amort,\r\n        terms,\r\n        date_released,\r\n        maturity_date,\r\n      };\r\n\r\n      const response = await fetch(`http://localhost:8000/loans/${clientId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          Authorization: localStorage.getItem('token'),\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      console.log(parseRes);\r\n\r\n      setInputs({\r\n        type: '',\r\n        status: '',\r\n        gross_loan: '',\r\n        balance: '',\r\n        amort: '',\r\n        terms: '',\r\n        date_released: '',\r\n        maturity_date: '',\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='flex'>\r\n      <div>\r\n        <Sidebar />\r\n      </div>\r\n      {/* Add Loan */}\r\n      <div className='container ml-10 py-2 flex-1 flex flex-col px-2'>\r\n        {/* TITLE */}\r\n        <div className='px-4 py-5 sm:px-6 bg-red-500 mb-5'>\r\n          <h3 className='text-lg font-medium leading-6 text-white'>\r\n            New Loan for Client #{clientId}\r\n          </h3>\r\n          <p className='mt-1 max-w-2xl text-sm text-white'>\r\n            Add a loan for a client\r\n          </p>\r\n        </div>\r\n\r\n        {/* FORM */}\r\n        <form className='grid grid-cols-2 p-2' onSubmit={onSubmit}>\r\n          {/* TYPE */}\r\n          <div>\r\n            <label htmlFor='type'>Type of Loan:</label>\r\n            <select\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              name='type'\r\n              id='type'\r\n              value={type}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n            >\r\n              <option value='Personal Loan'>Personal Loan</option>\r\n              <option value='Salary Loan'>Salary Loan</option>\r\n              <option value='Business Loan'>Business Loan</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* STATUS */}\r\n          <div>\r\n            <label htmlFor='maturity_date'>Status:</label>\r\n            <select\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              name='status'\r\n              id='status'\r\n              value={status}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n            >\r\n              <option value='Approved'>Approved</option>\r\n              <option value='Fully Paid'>Fully Paid</option>\r\n              <option value='Disbursed'>Disbursed</option>\r\n              <option value='Pending'>Pending</option>\r\n              <option value='Declined'>Declined</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* GROSS LOAN */}\r\n          <div>\r\n            <label htmlFor='gross_loan'>Gross Loan:</label>\r\n            <input\r\n              type='number'\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              placeholder='Gross Loan'\r\n              name='gross_loan'\r\n              value={gross_loan}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* BALANCE */}\r\n          <div>\r\n            <label htmlFor='gross_loan'>Balance:</label>\r\n            <input\r\n              type='number'\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              placeholder='Balance'\r\n              name='balance'\r\n              value={balance}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* AMORTIZATION */}\r\n          <div>\r\n            <label htmlFor='amort'>Amortization:</label>\r\n            <input\r\n              type='number'\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              placeholder='Amortization'\r\n              name='amort'\r\n              value={amort}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* TERMS */}\r\n          <div>\r\n            <label htmlFor='terms'>Terms:</label>\r\n            <select\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              name='terms'\r\n              id='terms'\r\n              value={terms}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n            >\r\n              <option value='1'>1 Month</option>\r\n              <option value='2'>2 Months</option>\r\n              <option value='3'>3 Months</option>\r\n              <option value='4'>4 Months</option>\r\n              <option value='5'>5 Months</option>\r\n              <option value='6'>6 Months</option>\r\n              <option value='12'>12 Months</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* DATE RELEASED */}\r\n          <div>\r\n            <label htmlFor='date_released'>Date Released:</label>\r\n            <input\r\n              type='date'\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              placeholder='Date Released'\r\n              name='date_released'\r\n              value={date_released}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* MATURITY DATE */}\r\n          <div>\r\n            <label htmlFor='maturity_date'>Maturity Date:</label>\r\n            <input\r\n              type='date'\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              placeholder='Maturity Date'\r\n              name='maturity_date'\r\n              value={maturity_date}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* BUTTONS */}\r\n          <div>\r\n            <button\r\n              className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-auto ml-auto '\r\n              type='submit'\r\n            >\r\n              Add New Loan\r\n            </button>\r\n            <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-1/5 ml-10'>\r\n              <Link to={`/borrower/${clientId}`}>Cancel</Link>\r\n            </button>\r\n          </div>\r\n\r\n          {/*  */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddLoan;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\borrowers\\Borrower.jsx",["265","266","267","268","269","270"],[],"import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\n// import EditBorrower from './EditBorrower';\r\n\r\nimport {\r\n  LocationOnOutlined,\r\n  MailOutline,\r\n  PermIdentity,\r\n  PhoneAndroid,\r\n  Publish,\r\n} from '@mui/icons-material';\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\nimport LoanInfo from '../loans/Loan';\r\nimport Account from './Account';\r\n\r\nexport default function Borrower({ setAuth }) {\r\n  const [id, setId] = useState();\r\n  const [name, setName] = useState('');\r\n  const [contactnumber, setContactNumber] = useState();\r\n  const [address, setAddress] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n\r\n  // const [clientInfo, setClientInfo] = useState([]);\r\n\r\n  const location = useLocation();\r\n\r\n  const clientId = location.pathname.split('/')[2];\r\n\r\n  const getClient = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/client/${clientId}`, {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n      console.log(parseRes);\r\n\r\n      // setClientInfo(parseRes[0]);\r\n      // setId(parseRes);\r\n      setName(parseRes.firstname + ' ' + parseRes.lastname);\r\n      setContactNumber(parseRes.contactnumber);\r\n      setAddress(parseRes.address);\r\n      setUsername(parseRes.username);\r\n      setEmail(parseRes.email);\r\n      // console.log(name);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // const id = clientInfo[0].id;\r\n  // const fullname = clientInfo[0].firstname + ' ' + clientInfo[0].lastname;\r\n  // const email = clientInfo[0].email;\r\n  // const contactnumber = clientInfo[0].contactnumber;\r\n  // const address = clientInfo[0].address;\r\n  // const username = clientInfo[0].username;\r\n  // const password = clientInfo[0].password;\r\n\r\n  // console.log(fullname);\r\n  useEffect(() => {\r\n    getClient();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='flex flex-1 flex-column w-screen'>\r\n      {/* <h1>{name}</h1> */}\r\n      <Sidebar />\r\n\r\n      {/* BORROWER INFO */}\r\n      <div className='py-5 px-5 w-full'>\r\n        <div className='px-4 py-5 sm:px-6 bg-red-500'>\r\n          <h3 className='text-lg font-medium leading-6 text-white'>\r\n            Borrower Info\r\n          </h3>\r\n          <p className='mt-1 max-w-2xl text-sm text-white'>\r\n            All clients personal information\r\n          </p>\r\n        </div>\r\n\r\n        {/* ACCOUNT INFO */}\r\n        <div className='flex container mt-5 w-full shadow-md'>\r\n          <div className='py-5 px-5 '>\r\n            <div className='flex items-center  py-5 px-5'>\r\n              <img\r\n                src='https://cdn3.iconfinder.com/data/icons/red-icons-1/512/Male-profile-icon-512.png'\r\n                alt=''\r\n                className='w-2/5 h-2/5'\r\n              />\r\n              <div className='ml-20 w-96'>\r\n                <span className='text-base font-semibold mt-10 text-gray-500 '>\r\n                  Account Details\r\n                </span>\r\n\r\n                <div className='flex items-center my-5'>\r\n                  <PermIdentity className='text-lg' />\r\n                  <span className='ml-2.5'>{name}</span>\r\n                </div>\r\n                <div className='flex items-center my-5'>\r\n                  <MailOutline className='text-lg ' />\r\n                  <span className='ml-2.5'>{email}</span>\r\n                </div>\r\n                <div className='flex items-center my-5'>\r\n                  <LocationOnOutlined className='text-lg ' />\r\n                  <span className='ml-2.5'>{address}</span>\r\n                </div>\r\n                <div className='flex items-center my-5'>\r\n                  <PhoneAndroid className='text-lg ' />\r\n                  <span className='ml-2.5'>{contactnumber}</span>\r\n                </div>\r\n\r\n                {/* {clientInfo.map((c) => {\r\n                  <div className='flex items-center my-5'>\r\n                    <PermIdentity className='text-lg' />\r\n                    <span className='ml-2.5'>ID: {c.id}</span>\r\n                  </div>;\r\n                })} */}\r\n\r\n                <div className='flex items-center my-5'>\r\n                  <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline '>\r\n                    <Link to={`/editBorrower/${clientId}`}>UPDATE CLIENT</Link>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* LOAN INFO */}\r\n        <LoanInfo />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\borrowers\\AddBorrower.jsx",["271","272"],[],"import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\n\r\nconst AddBorrower = ({ setAuth }) => {\r\n  const [inputs, setInputs] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    address: '',\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const {\r\n    firstname,\r\n    lastname,\r\n    contactNumber,\r\n    address,\r\n    email,\r\n    username,\r\n    password,\r\n  } = inputs;\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = {\r\n        firstname,\r\n        lastname,\r\n        contactNumber,\r\n        address,\r\n        email,\r\n        username,\r\n        password,\r\n      };\r\n\r\n      const response = await fetch('http://localhost:8000/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.token) {\r\n        localStorage.setItem('token', parseRes.token);\r\n        console.log(parseRes.token);\r\n        setAuth(true);\r\n      } else {\r\n        setAuth(false);\r\n        console.log('Something wrong');\r\n      }\r\n\r\n      setInputs({\r\n        firstname: '',\r\n        lastname: '',\r\n        contactNumber: '',\r\n        address: '',\r\n        email: '',\r\n        username: '',\r\n        password: '',\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='flex '>\r\n      <div>\r\n        <Sidebar />\r\n      </div>\r\n\r\n      <div className='w-full'>\r\n        <div className='w-full px-8 pt-6 pb-8 mb-4 bg-white  rounded '>\r\n          <div className='px-4 py-5 sm:px-6 bg-red-500 '>\r\n            <h3 className='text-lg font-medium leading-6 text-white'>\r\n              <span className=''>Add Client</span>\r\n            </h3>\r\n            <p className='mt-1 max-w-2xl text-sm text-white'>\r\n              Fill up all required infos\r\n            </p>\r\n          </div>\r\n          <form\r\n            onSubmit={(e) => {\r\n              onSubmit(e);\r\n            }}\r\n            className='mt-5'\r\n          >\r\n            {/* FIRST NAME */}\r\n            <label htmlFor='firstname'>First Name: </label>\r\n            <input\r\n              type='text'\r\n              className='block border border-grey-500 w-full p-3 rounded mb-4'\r\n              name='firstname'\r\n              value={firstname}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='First Name'\r\n              required\r\n            />\r\n\r\n            {/* LAST NAME */}\r\n            <label htmlFor='lastname'>Last Name: </label>\r\n            <input\r\n              type='text'\r\n              className='block border border-grey-500 w-full p-3 rounded mb-4'\r\n              name='lastname'\r\n              value={lastname}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Last Name'\r\n              required\r\n            />\r\n\r\n            {/* CONTACT NUMBER */}\r\n            <label htmlFor='contactNumber'>Contact Number: </label>\r\n            <input\r\n              type='number'\r\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\r\n              name='contactNumber'\r\n              value={contactNumber}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Contact Number'\r\n              required\r\n            />\r\n\r\n            {/* ADDRESS */}\r\n            <label htmlFor='address'>Address: </label>\r\n            <input\r\n              type='text'\r\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\r\n              name='address'\r\n              value={address}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Address'\r\n              required\r\n            />\r\n\r\n            {/* EMAIL ADDRESS */}\r\n            <label htmlFor='email'>Email Address: </label>\r\n            <input\r\n              type='email'\r\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\r\n              name='email'\r\n              value={email}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Email'\r\n              required\r\n            />\r\n\r\n            {/* USERNAME */}\r\n            <label htmlFor='username'>Username: </label>\r\n            <input\r\n              type='text'\r\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\r\n              name='username'\r\n              value={username}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Username'\r\n              required\r\n            />\r\n\r\n            {/* PASSWORD */}\r\n            <label htmlFor='password'>Password: </label>\r\n            <input\r\n              type='password'\r\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\r\n              name='password'\r\n              value={password}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Password'\r\n              required\r\n            />\r\n\r\n            {/* BUTTONS */}\r\n            <button\r\n              type='submit'\r\n              className=' bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-1/6'\r\n            >\r\n              Save\r\n            </button>\r\n            <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-1/6 ml-10'>\r\n              {/* <Navigate to='/borrowers'>Cancel</Navigate> */}\r\n              <Link to='/borrowers'>Cancel</Link>\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBorrower;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\borrowers\\EditBorrower.jsx",["273","274"],[],"import { ArrowBackIosNewOutlined } from '@mui/icons-material';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link, Navigate, useLocation } from 'react-router-dom';\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\n\r\nconst EditBorrower = () => {\r\n  const [inputs, setInputs] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    address: '',\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const { firstname, lastname, contactNumber, address, email } = inputs;\r\n\r\n  const location = useLocation();\r\n\r\n  const clientId = location.pathname.split('/')[2];\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = {\r\n        firstname,\r\n        lastname,\r\n        contactNumber,\r\n        address,\r\n        email,\r\n      };\r\n\r\n      const response = await fetch(\r\n        `http://localhost:8000/clients/${clientId}`,\r\n        {\r\n          method: 'PATCH',\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization: localStorage.getItem('token'),\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      console.log(parseRes);\r\n\r\n      setInputs({\r\n        firstname: '',\r\n        lastname: '',\r\n        contactNumber: '',\r\n        address: '',\r\n        email: '',\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='flex '>\r\n      <div>\r\n        <Sidebar />\r\n      </div>\r\n\r\n      <div className='w-full'>\r\n        <div className='container ml-10 flex flex-col px-2'>\r\n          <span>\r\n            <Link to={`/borrower/${clientId}`}>\r\n              <ArrowBackIosNewOutlined />\r\n            </Link>\r\n          </span>\r\n          <h1 className='text-xl my-5'>Update Client #{clientId}</h1>\r\n\r\n          {/*  */}\r\n          <form\r\n            onSubmit={(e) => {\r\n              onSubmit(e);\r\n            }}\r\n          >\r\n            <input\r\n              type='text'\r\n              className='block border border-grey-500 w-full p-3 rounded mb-4'\r\n              name='firstname'\r\n              value={firstname}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='First Name'\r\n              required\r\n            />\r\n            <input\r\n              type='text'\r\n              className='block border border-grey-500 w-full p-3 rounded mb-4'\r\n              name='lastname'\r\n              value={lastname}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Last Name'\r\n              required\r\n            />\r\n            <input\r\n              type='number'\r\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\r\n              name='contactNumber'\r\n              value={contactNumber}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Contact Number'\r\n              required\r\n            />\r\n            <input\r\n              type='text'\r\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\r\n              name='address'\r\n              value={address}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Address'\r\n              required\r\n            />\r\n            <input\r\n              type='email'\r\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\r\n              name='email'\r\n              value={email}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n              placeholder='Email'\r\n              required\r\n            />\r\n            <button\r\n              type='submit'\r\n              className=' text-center py-3 rounded bg-red-500 text-white hover:bg-red-700 focus:outline-none my-1 w-1/5'\r\n            >\r\n              Update\r\n            </button>\r\n            <button className=' ml-5 text-center py-3 rounded bg-red-500 text-white hover:bg-red-700 focus:outline-none my-1 w-1/5'>\r\n              {/* <Navigate to='/borrowers'>Cancel</Navigate> */}\r\n              <Link to={`/borrower/${clientId}`}>Cancel</Link>\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditBorrower;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\borrowers\\Borrowers.jsx",["275","276","277"],[],"import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  DeleteForever,\r\n  Edit,\r\n  PreviewOutlined,\r\n  VisibilityOutlined,\r\n} from '@mui/icons-material';\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\nimport Borrower from './Borrower';\r\n\r\nconst Borrowers = ({ setAuth }) => {\r\n  const [clients, setClients] = useState([]);\r\n\r\n  const getClients = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/allClients', {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n      // console.log(parseRes);\r\n\r\n      setClients(parseRes);\r\n      // setUser(parseRes.firstname);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  console.log(clients);\r\n\r\n  // Delete CLIENT Function\r\n  async function deleteClient(id) {\r\n    try {\r\n      await fetch(`http://localhost:8000/clients/${id}`, {\r\n        method: 'DELETE',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      setClients(clients.filter((loan) => loan.id !== id));\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getClients();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const interval = setInterval(() => {\r\n  //     getClients();\r\n  //   }, 1000);\r\n  //   return () => clearInterval(interval);\r\n  // }, []);\r\n\r\n  return (\r\n    <div className='text-gray-900 bg-gray-200 flex'>\r\n      <Sidebar />\r\n      {/* Clients */}\r\n      <div className='w-full mx-auto px-8 pt-6 pb-8 mb-4 bg-white shadow-md rounded  h-screen'>\r\n        {/* TITLE */}\r\n        <div className='px-4 py-5 sm:px-6 bg-red-500'>\r\n          <h3 className='text-lg font-medium leading-6 text-white'>\r\n            Borrowers\r\n          </h3>\r\n          <p className='mt-1 max-w-2xl text-sm text-white'>\r\n            All clients personal information\r\n          </p>\r\n        </div>\r\n\r\n        {/* INFO */}\r\n        <table className='table-fixed text-center'>\r\n          <thead className='border-y-2 mt-5'>\r\n            <tr className='border-y-2 mt-10'>\r\n              <th className='w-1/1 px-1 py-2 text-gray-600'>ID</th>\r\n              <th className='w-1/4 px-1 py-2 text-gray-600'>Full Name</th>\r\n              <th className='w-1/4 px-1 py-2 text-gray-600'>Contact Number</th>\r\n              <th className='w-1/4 px-4 py-2 text-gray-600'>Address</th>\r\n              <th className='w-1/4 px-1 py-2 text-gray-600'>Email</th>\r\n              <th className='w-1/1 px-1 py-2 text-gray-600'>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {clients.length <= 0 ? (\r\n              <tr className='border px-4 py-2 bg-red-50'>\r\n                <td></td>\r\n                <td></td>\r\n                <td className='px-4 py-2 bg-red-50'>No Client Data</td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n            ) : (\r\n              clients.map((client, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td className='border px-4 py-2 bg-gray-50'>{client.id}</td>\r\n                    <td className='border px-4 py-2 '>\r\n                      {client.firstname + ' ' + client.lastname}{' '}\r\n                    </td>\r\n                    <td className='border px-4 py-2 bg-gray-50'>\r\n                      {client.contactnumber}\r\n                    </td>\r\n                    <td className='border px-4 py-2'>{client.address}</td>\r\n                    <td className='border px-4 py-2 bg-gray-50'>\r\n                      {client.email}\r\n                    </td>\r\n                    <td className='border px-4 py-2'>\r\n                      {/* <button onClick={() => deleteClient(client.id)}>\r\n                        <DeleteOutlined />\r\n                      </button>\r\n                      <button className=''>\r\n                        <Link to={'/borrower/' + client.id}>\r\n                          <Create />\r\n                        </Link>\r\n                      </button> */}\r\n                      <button\r\n                        className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mb-2 rounded focus:outline-none focus:shadow-outline w-full text-sm'\r\n                        onClick={() => deleteClient(client.id)}\r\n                      >\r\n                        <DeleteForever className='text-lg' />\r\n                      </button>\r\n                      <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full '>\r\n                        <Link to={`/Borrower/${client.id}`}>\r\n                          <VisibilityOutlined className='text-sm' />\r\n                        </Link>\r\n                        {/* <Borrower clientId={client.id} /> */}\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        <button\r\n          className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mb-2 rounded focus:outline-none focus:shadow-outline w-auto mt-2'\r\n          // onClick={() => deleteLoan(loan.id)}\r\n        >\r\n          <Link to='/addBorrower'>Add Borrower</Link>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Borrowers;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\loans\\EditLoan.jsx",["278"],[],"import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\nimport OneLoan from './OneLoan';\r\n\r\nconst EditLoan = () => {\r\n  const [inputs, setInputs] = useState({\r\n    type: '',\r\n    balance: '',\r\n    gross_loan: '',\r\n    amort: '',\r\n    terms: '',\r\n    status: '',\r\n    date_released: '',\r\n    maturity_date: '',\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const {\r\n    type,\r\n    balance,\r\n    gross_loan,\r\n    amort,\r\n    terms,\r\n    status,\r\n    date_released,\r\n    maturity_date,\r\n  } = inputs;\r\n\r\n  const location = useLocation();\r\n\r\n  const loanId = location.pathname.split('/')[2];\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = {\r\n        type,\r\n        balance,\r\n        gross_loan,\r\n        amort,\r\n        terms,\r\n        date_released,\r\n        status,\r\n        maturity_date,\r\n      };\r\n\r\n      console.log(body);\r\n\r\n      const response = await fetch(`http://localhost:8000/loans/${loanId}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          Authorization: localStorage.getItem('token'),\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      console.log(parseRes);\r\n\r\n      setInputs({\r\n        type: '',\r\n        balance: '',\r\n        gross_loan: '',\r\n        amort: '',\r\n        terms: '',\r\n        status: '',\r\n        date_released: '',\r\n        maturity_date: '',\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='flex '>\r\n      <div>\r\n        <Sidebar />\r\n      </div>\r\n\r\n      <div className='w-full'>\r\n        <div className='container ml-10 flex flex-col px-2'>\r\n          {/* TITLE */}\r\n          <div className='px-4 py-5 sm:px-6 bg-red-500 '>\r\n            <h3 className='text-lg font-medium leading-6 text-white'>\r\n              <span className=''>Loan Voucher # {loanId}</span>\r\n            </h3>\r\n            <p className='mt-1 max-w-2xl text-sm text-white'>\r\n              Edit and update your loan\r\n            </p>\r\n          </div>\r\n\r\n          <OneLoan />\r\n          <h3 className='text-lg font-medium leading-6 text-gray my-2 px-1 py-4 border-y-2 '>\r\n            Edit Form\r\n          </h3>\r\n          <form\r\n            onSubmit={(e) => {\r\n              onSubmit(e);\r\n            }}\r\n            className='grid grid-cols-2 p-2'\r\n          >\r\n            {/* LOAN TYPE */}\r\n            <div>\r\n              <label htmlFor='type'>Loan Type: </label>\r\n              <select\r\n                className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n                name='type'\r\n                id='type'\r\n                value={type}\r\n                onChange={(e) => {\r\n                  onChange(e);\r\n                }}\r\n              >\r\n                <option value='Personal Loan'>Personal Loan</option>\r\n                <option value='Salary Loan'>Salary Loan</option>\r\n                <option value='Business Loan'>Business Loan</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* LOAN STATUS */}\r\n            <div>\r\n              <label htmlFor='status'>Status: </label>\r\n              <select\r\n                className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n                name='status'\r\n                id='status'\r\n                value={status}\r\n                onChange={(e) => {\r\n                  onChange(e);\r\n                }}\r\n              >\r\n                <option value='Approved'>Approved</option>\r\n                <option value='Fully Paid'>Fully Paid</option>\r\n                <option value='Disbursed'>Disbursed</option>\r\n                <option value='Pending'>Pending</option>\r\n                <option value='Declined'>Declined</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* GROSS LOAN */}\r\n            <div>\r\n              <label htmlFor='gross_loan'>Gross Loan: </label>\r\n              <input\r\n                type='number'\r\n                className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n                name='gross_loan'\r\n                value={gross_loan}\r\n                onChange={(e) => {\r\n                  onChange(e);\r\n                }}\r\n                placeholder='Gross Loan'\r\n              />\r\n            </div>\r\n\r\n            {/* BALANCE */}\r\n            <div>\r\n              <label htmlFor='balance'>Balance: </label>\r\n              <input\r\n                type='number'\r\n                className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n                name='balance'\r\n                value={balance}\r\n                onChange={(e) => {\r\n                  onChange(e);\r\n                }}\r\n                placeholder='Balance'\r\n              />\r\n            </div>\r\n\r\n            {/* AMORTIZATION */}\r\n            <div>\r\n              <label htmlFor='amort'>Amortization: </label>\r\n              <input\r\n                type='number'\r\n                className='block border border-grey-500t w-10/12 p-3 rounded mb-4'\r\n                name='amort'\r\n                value={amort}\r\n                onChange={(e) => {\r\n                  onChange(e);\r\n                }}\r\n                placeholder='Monthly Amortization'\r\n              />\r\n            </div>\r\n\r\n            {/* TERMS */}\r\n            <div>\r\n              <label htmlFor='terms'>Terms: </label>\r\n              <select\r\n                className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n                name='terms'\r\n                id='terms'\r\n                value={terms}\r\n                onChange={(e) => {\r\n                  onChange(e);\r\n                }}\r\n              >\r\n                <option value='1'>1 Month</option>\r\n                <option value='2'>2 Months</option>\r\n                <option value='3'>3 Months</option>\r\n                <option value='4'>4 Months</option>\r\n                <option value='5'>5 Months</option>\r\n                <option value='6'>6 Months</option>\r\n                <option value='12'>12 Months</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* DATE RELEASED */}\r\n            <div>\r\n              <label htmlFor='date_released'>Date Released: </label>\r\n              <input\r\n                type='date'\r\n                className='block border border-grey-500t w-10/12 p-3 rounded mb-4'\r\n                name='date_released'\r\n                value={date_released}\r\n                onChange={(e) => {\r\n                  onChange(e);\r\n                }}\r\n                placeholder='Date Released'\r\n              />\r\n            </div>\r\n\r\n            {/* MATURITY DATE */}\r\n            <div>\r\n              <label htmlFor='maturity_date'>Maturity Date: </label>\r\n              <input\r\n                type='date'\r\n                className='block border border-grey-500t w-10/12 p-3 rounded mb-4'\r\n                name='maturity_date'\r\n                value={maturity_date}\r\n                onChange={(e) => {\r\n                  onChange(e);\r\n                }}\r\n                placeholder='Maturity Date'\r\n              />\r\n            </div>\r\n\r\n            {/* BUTTONS */}\r\n            <div>\r\n              <button\r\n                type='submit'\r\n                className=' text-center py-3 rounded bg-red-500 text-white hover:bg-red-700 focus:outline-none my-1 w-1/5'\r\n              >\r\n                Update\r\n              </button>\r\n              <button className=' ml-5 text-center py-3 rounded bg-red-500 text-white hover:bg-red-700 focus:outline-none my-1 w-1/5'>\r\n                <Link to='/loans'>Cancel</Link>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditLoan;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\loans\\ClientsLoans.jsx.jsx",["279"],[],"import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport { DeleteForever, Edit, Update } from '@mui/icons-material';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst GetAllLoans = ({ setAuth }) => {\r\n  const [loans, setLoans] = useState([]);\r\n\r\n  const GetLoans = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/allLoans/', {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setLoans(parseRes);\r\n      console.log(parseRes[0].id);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  async function deleteLoan(id) {\r\n    try {\r\n      await fetch(`http://localhost:8000/loans/${id}`, {\r\n        method: 'DELETE',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      setLoans(loans.filter((loan) => loan.id !== id));\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    GetLoans();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='flex w-full'>\r\n      {/* Loans Information */}\r\n      <div className='w-full px-8 pt-6 pb-8 mb-4 bg-white shadow-md rounded '>\r\n        <div className='px-4 py-5 sm:px-6 bg-red-500'>\r\n          <h3 className='text-lg font-medium leading-6 text-white'>\r\n            Loans Report\r\n          </h3>\r\n          <p className='mt-1 max-w-2xl text-sm text-white'>\r\n            Loans summary and informations.\r\n          </p>\r\n        </div>\r\n\r\n        <div className='flex items-center justify-between border-y-2 mt-5'>\r\n          <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\r\n            Loan Transactions\r\n          </h3>\r\n          <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mb-2 rounded focus:outline-none focus:shadow-outline w-auto mt-2'>\r\n            <Link to='/addLoan'>Add Loan</Link>\r\n          </button>\r\n        </div>\r\n        <table className='table-fixed text-center '>\r\n          <thead>\r\n            <tr>\r\n              <th className='w-1/1 px-1 py-2 text-gray-600'>Voucher</th>\r\n              <th className='w-1/6 px-1 py-2 text-gray-600'>Client Name</th>\r\n              <th className='w-1/6 px-1 py-2 text-gray-600'>Loan Type</th>\r\n              <th className='w-1/6 px-1 py-2 text-gray-600'>\r\n                Outstanding Balance\r\n              </th>\r\n              <th className='w-1/6 px-4 py-2 text-gray-600'>Gross Loan</th>\r\n              <th className='w-1/6 px-4 py-2 text-gray-600'>Amortization</th>\r\n              <th className='w-1/6 px-4 py-2 text-gray-600'>Terms</th>\r\n              <th className='w-1/6 px-4 py-2 text-gray-600'>Date Released</th>\r\n              <th className='w-1/6 px-4 py-2 text-gray-600'>Status</th>\r\n              <th className='w-1/1 px-4 py-2 text-gray-600'>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {loans.length <= 0 ? (\r\n              <tr className='border px-4 py-2 bg-red-50'>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td className='px-4 py-2 bg-red-50'>No Loan Data</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n            ) : (\r\n              loans.map((loan, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td className='border px-4 py-2 bg-gray-50'>{loan.id}</td>\r\n                    <td className='border px-4 py-2'>\r\n                      {loan.firstname + ' ' + loan.lastname}\r\n                    </td>\r\n                    <td className='border px-4 py-2'>{loan.type}</td>\r\n                    <td className='border px-4 py-2 bg-gray-50'>\r\n                      ₱ {loan.balance}\r\n                    </td>\r\n                    <td className='border px-4 py-2 '>₱ {loan.gross_loan}</td>\r\n                    <td className='border px-4 py-2 bg-gray-50'>\r\n                      ₱ {loan.amort}\r\n                    </td>\r\n                    <td className='border px-4 py-2 '>{loan.terms} month/s</td>\r\n                    <td className='border px-4 py-2 bg-gray-50'>\r\n                      {new Date(loan.date_released).toDateString()}\r\n                    </td>\r\n                    <td className='border px-4 py-2 '>\r\n                      {/* <span className='border bg-green-600 text-white px-5 py-1 rounded-md'>\r\n                          {loan.status}\r\n                        </span> */}\r\n                      {loan.status === 'Approved' ||\r\n                      loan.status === 'Fully Paid' ||\r\n                      loan.status === 'Disbursed' ? (\r\n                        <span className=' bg-green-500 text-white px-4 py-1 rounded-md'>\r\n                          {loan.status}\r\n                        </span>\r\n                      ) : loan.status === 'Declined' ? (\r\n                        <span className=' bg-red-400 text-white px-4 py-1 rounded-md'>\r\n                          {loan.status}\r\n                        </span>\r\n                      ) : (\r\n                        <span className=' bg-yellow-300 text-white px-4 py-1 rounded-md'>\r\n                          {loan.status}\r\n                        </span>\r\n                      )}\r\n                    </td>\r\n\r\n                    <td className='border px-4 py-2'>\r\n                      <button\r\n                        className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mb-2 rounded focus:outline-none focus:shadow-outline w-full text-sm'\r\n                        onClick={() => deleteLoan(loan.id)}\r\n                      >\r\n                        <DeleteForever className='text-lg' />\r\n                      </button>\r\n                      <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full '>\r\n                        <Link to={`/editLoan/${loan.id}`}>\r\n                          <Edit className='text-sm' />\r\n                        </Link>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetAllLoans;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\borrowers\\Account.jsx",["280","281","282","283"],[],"import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  LocationOnOutlined,\r\n  MailOutline,\r\n  PermIdentity,\r\n  PhoneAndroid,\r\n  Publish,\r\n} from '@mui/icons-material';\r\n\r\nexport default function Account({ clientID }) {\r\n  const [id, setId] = useState();\r\n  const [name, setName] = useState('');\r\n  const [contactnumber, setContactNumber] = useState();\r\n  const [address, setAddress] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n\r\n  // const [client, setClient] = useState([]);\r\n\r\n  const getProfile = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8000/client/:${clientID}`,\r\n        {\r\n          method: 'GET',\r\n          headers: { Authorization: localStorage.getItem('token') },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n      console.log(parseRes);\r\n\r\n      setId(parseRes.id);\r\n      setName(parseRes.firstname + ' ' + parseRes.lastname);\r\n      setContactNumber(parseRes.contactnumber);\r\n      setAddress(parseRes.address);\r\n      setUsername(parseRes.username);\r\n      setEmail(parseRes.email);\r\n\r\n      // console.log(parseRes.id);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProfile();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {/* ACCOUNT INFO */}\r\n      <div className='flex container mt-5 w-full shadow-md'>\r\n        <div className='py-5 px-5 '>\r\n          <div className='flex items-center  py-5 px-5'>\r\n            <img\r\n              src='https://cdn3.iconfinder.com/data/icons/red-icons-1/512/Male-profile-icon-512.png'\r\n              alt=''\r\n              className='w-2/5 h-2/5'\r\n            />\r\n            <div className='ml-20 w-96'>\r\n              <span className='text-base font-semibold mt-10 text-gray-500 '>\r\n                Account Details\r\n              </span>\r\n\r\n              {/* DETAILS */}\r\n              <div className='flex items-center my-5'>\r\n                <PermIdentity className='text-lg' />\r\n                <span className='ml-2.5'>{name}</span>\r\n              </div>\r\n              <div className='flex items-center my-5'>\r\n                <MailOutline className='text-lg ' />\r\n                <span className='ml-2.5'>{email}</span>\r\n              </div>\r\n              <div className='flex items-center my-5'>\r\n                <LocationOnOutlined className='text-lg ' />\r\n                <span className='ml-2.5'>{address}</span>\r\n              </div>\r\n              <div className='flex items-center my-5'>\r\n                <PhoneAndroid className='text-lg ' />\r\n                <span className='ml-2.5'>{contactnumber}</span>\r\n              </div>\r\n\r\n              {/* UPDATE BUTTON */}\r\n              <div className='flex items-center my-5'>\r\n                <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline '>\r\n                  <Link to={`/editBorrower/`}>UPDATE CLIENT</Link>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\loans\\Loan.jsx",["284","285","286","287","288"],[],"import {\r\n  DeleteForever,\r\n  Edit,\r\n  Money,\r\n  Payments,\r\n  Update,\r\n} from '@mui/icons-material';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport PaymentsInfo from '../payments/ListPayments';\r\n\r\nconst LoanInfo = () => {\r\n  const [loans, setLoans] = useState([]);\r\n  const [loanId, setLoanId] = useState();\r\n\r\n  const location = useLocation();\r\n\r\n  const clientId = location.pathname.split('/')[2];\r\n\r\n  const GetLoans = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/loans/${clientId}`, {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setLoans(parseRes);\r\n      console.log(loans);\r\n      console.log(loanId);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  console.log(loanId);\r\n\r\n  // Delete loan Function\r\n  async function deleteLoan(id) {\r\n    try {\r\n      await fetch(`http://localhost:8000/loans/${id}`, {\r\n        method: 'DELETE',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      setLoans(loans.filter((loan) => loan.id !== id));\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    GetLoans();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* Loans Information */}\r\n      <div className='w-full mx-auto px-8 pt-6 pb-8 mb-4 bg-white shadow-md rounded '>\r\n        <div className='px-4 py-5 sm:px-6 bg-red-500'>\r\n          <h3 className='text-lg font-medium leading-6 text-white'>\r\n            Loan Information\r\n          </h3>\r\n          <p className='mt-1 max-w-2xl text-sm text-white'>\r\n            Loan transactions and payments.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Active Loans */}\r\n        <div>\r\n          <div className='flex items-center justify-between border-y-2 mt-5'>\r\n            <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\r\n              Loan Transactions\r\n            </h3>\r\n            <button\r\n              className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mb-2 rounded focus:outline-none focus:shadow-outline w-auto mt-2'\r\n              // onClick={() => deleteLoan(loan.id)}\r\n            >\r\n              <Link to={`/addLoan/${clientId}`}>Add Loan</Link>\r\n            </button>\r\n          </div>\r\n          <table className='table-fixed text-center '>\r\n            <thead>\r\n              <tr>\r\n                <th className='w-1/1 px-1 py-2 text-gray-600'>Voucher</th>\r\n                <th className='w-1/6 px-1 py-2 text-gray-600'>Loan Type</th>\r\n                <th className='w-1/6 px-1 py-2 text-gray-600'>\r\n                  Outstanding Balance\r\n                </th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Gross Loan</th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Amortization</th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Terms</th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Date Released</th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Status</th>\r\n                <th className='w-1/1 px-4 py-2 text-gray-600'>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {loans.length <= 0 ? (\r\n                <tr className='border px-4 py-2 bg-red-50'>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td className='px-4 py-2 bg-red-50'>No Loan Data</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n              ) : (\r\n                loans.map((loan, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td className='border px-4 py-2 bg-gray-50'>{loan.id}</td>\r\n                      <td className='border px-4 py-2'>{loan.type}</td>\r\n                      <td className='border px-4 py-2 bg-gray-50'>\r\n                        ₱ {loan.balance}\r\n                      </td>\r\n                      <td className='border px-4 py-2 '>₱ {loan.gross_loan}</td>\r\n                      <td className='border px-4 py-2 bg-gray-50'>\r\n                        ₱ {loan.amort}\r\n                      </td>\r\n                      <td className='border px-4 py-2 '>\r\n                        {loan.terms} month/s\r\n                      </td>\r\n                      <td className='border px-4 py-2 bg-gray-50'>\r\n                        {new Date(loan.date_released).toDateString()}\r\n                      </td>\r\n                      <td className='border px-4 py-2 '>\r\n                        {loan.status === 'Approved' ||\r\n                        loan.status === 'Fully Paid' ? (\r\n                          <span className=' bg-green-500 text-white px-4 py-1 rounded-md'>\r\n                            {loan.status}\r\n                          </span>\r\n                        ) : loan.status === 'Declined' ? (\r\n                          <span className=' bg-red-400 text-white px-4 py-1 rounded-md'>\r\n                            {loan.status}\r\n                          </span>\r\n                        ) : loan.status === 'Pending' ? (\r\n                          <span className=' bg-yellow-300 text-white px-4 py-1 rounded-md'>\r\n                            {loan.status}\r\n                          </span>\r\n                        ) : (\r\n                          <span className=' bg-orange-300 text-white px-4 py-1 rounded-md'>\r\n                            {loan.status}\r\n                          </span>\r\n                        )}\r\n                      </td>\r\n\r\n                      <td className='border px-4 py-2 flex'>\r\n                        <button\r\n                          className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-3 mb-2 rounded focus:outline-none focus:shadow-outline w-full text-sm'\r\n                          onClick={() => deleteLoan(loan.id)}\r\n                        >\r\n                          <DeleteForever className='text-lg' />\r\n                        </button>\r\n                        <button className='bg-red-500 hover:bg-red-700 text-white px-3 rounded focus:outline-none focus:shadow-outline h-10 ml-2 mr-2'>\r\n                          <Link to={`/editLoan/${loan.id}`}>\r\n                            <Edit className='text-sm' />\r\n                          </Link>\r\n                        </button>\r\n                        <button className='bg-red-500 hover:bg-red-700 text-white font-bold h-10 px-4 rounded focus:outline-none focus:shadow-outline w-full '>\r\n                          <Link to={`/payment/${loan.client_id}/${loan.id}`}>\r\n                            ₱\r\n                          </Link>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Payment History */}\r\n        {/* <div>\r\n          <div className='flex items-center justify-between border-y-2 mt-5'>\r\n            <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\r\n              Payment History\r\n            </h3>\r\n            <button\r\n              className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mb-2 rounded focus:outline-none focus:shadow-outline w-auto mt-2'\r\n              // onClick={() => deleteLoan(loan.id)}\r\n            >\r\n              Add Payment\r\n            </button>\r\n          </div>\r\n          <table className='table-fixed text-center '>\r\n            <thead>\r\n              <tr>\r\n                <th className='w-1/1 px-1 py-2 text-gray-600'>Voucher</th>\r\n                <th className='w-1/4 px-1 py-2 text-gray-600'>\r\n                  Outstanding Balance\r\n                </th>\r\n                <th className='w-1/4 px-4 py-2 text-gray-600'>Amortization</th>\r\n                <th className='w-1/4 px-1 py-2 text-gray-600'>Payment</th>\r\n                <th className='w-1/4 px-4 py-2 text-gray-600'>\r\n                  Date of Transaction\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {loans.length <= 0 ? (\r\n                <tr className='border px-4 py-2 bg-red-50'>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td className='px-4 py-2 bg-red-50'>No Loan Data</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n              ) : (\r\n                loans.map((loan, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td className='border px-4 py-2 bg-gray-50'>{loan.id}</td>\r\n                      <td className='border px-4 py-2 '>₱ {loan.gross_loan}</td>\r\n                      <td className='border px-4 py-2 bg-gray-50'>\r\n                        ₱ {loan.amort}\r\n                      </td>\r\n                      <td className='border px-4 py-2'>₱ 0</td>\r\n                      <td className='border px-4 py-2 bg-gray-50'>\r\n                        {new Date(loan.date_released).toDateString()}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div> */}\r\n\r\n        <PaymentsInfo />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoanInfo;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\loans\\AddLoans.jsx",["289","290"],[],"import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\n\r\nconst AddLoans = () => {\r\n  const [inputs, setInputs] = useState({\r\n    client_id: '',\r\n    status: '',\r\n    type: '',\r\n    gross_loan: '',\r\n    balance: '',\r\n    amort: '',\r\n    terms: '',\r\n    date_released: '',\r\n    maturity_date: '',\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const {\r\n    client_id,\r\n    status,\r\n    type,\r\n    gross_loan,\r\n    balance,\r\n    amort,\r\n    terms,\r\n    date_released,\r\n    maturity_date,\r\n  } = inputs;\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = {\r\n        client_id,\r\n        type,\r\n        status,\r\n        gross_loan,\r\n        balance,\r\n        amort,\r\n        terms,\r\n        date_released,\r\n        maturity_date,\r\n      };\r\n\r\n      const response = await fetch(`http://localhost:8000/loans`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          Authorization: localStorage.getItem('token'),\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      console.log(parseRes);\r\n\r\n      setInputs({\r\n        client_id: '',\r\n        type: '',\r\n        status: '',\r\n        gross_loan: '',\r\n        balance: '',\r\n        amort: '',\r\n        terms: '',\r\n        date_released: '',\r\n        maturity_date: '',\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='flex'>\r\n      <div>\r\n        <Sidebar />\r\n      </div>\r\n      {/* TITLE */}\r\n      <div className='container ml-10 py-2 flex-1 flex flex-col px-2'>\r\n        <div className='px-4 py-5 sm:px-6 bg-red-500 mb-5'>\r\n          <h3 className='text-lg font-medium leading-6 text-white'>New Loan</h3>\r\n          <p className='mt-1 max-w-2xl text-sm text-white'>\r\n            Add a loan for a client\r\n          </p>\r\n        </div>\r\n\r\n        {/* FORM */}\r\n        <form className='grid grid-cols-2 p-2' onSubmit={onSubmit}>\r\n          {/* CLIENT ID */}\r\n          <div>\r\n            <label htmlFor='client_id'>Client ID:</label>\r\n            <input\r\n              type='number'\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              placeholder='Client ID'\r\n              name='client_id'\r\n              value={client_id}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* TYPE  */}\r\n          <div>\r\n            <label htmlFor='type'>Type of Loan:</label>\r\n            <select\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              name='type'\r\n              id='type'\r\n              value={type}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n            >\r\n              <option value='Personal Loan'>Personal Loan</option>\r\n              <option value='Salary Loan'>Salary Loan</option>\r\n              <option value='Business Loan'>Business Loan</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* STATUS */}\r\n          <div>\r\n            <label htmlFor='maturity_date'>Status:</label>\r\n            <select\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              name='status'\r\n              id='status'\r\n              value={status}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n            >\r\n              <option value='Approved'>Approved</option>\r\n              <option value='Fully Paid'>Fully Paid</option>\r\n              <option value='Disbursed'>Disbursed</option>\r\n              <option value='Pending'>Pending</option>\r\n              <option value='Declined'>Declined</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* GROSS LOAN */}\r\n          <div>\r\n            <label htmlFor='gross_loan'>Gross Loan:</label>\r\n            <input\r\n              type='number'\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              placeholder='Gross Loan'\r\n              name='gross_loan'\r\n              value={gross_loan}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* BALANCE */}\r\n          <div>\r\n            <label htmlFor='gross_loan'>Balance:</label>\r\n            <input\r\n              type='number'\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              placeholder='Balance'\r\n              name='balance'\r\n              value={balance}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* AMORTIZATION */}\r\n          <div>\r\n            <label htmlFor='amort'>Amortization:</label>\r\n            <input\r\n              type='number'\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              placeholder='Amortization'\r\n              name='amort'\r\n              value={amort}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* TERMS */}\r\n          <div>\r\n            <label htmlFor='terms'>Terms:</label>\r\n            <select\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              name='terms'\r\n              id='terms'\r\n              value={terms}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n            >\r\n              <option value='1'>1 Month</option>\r\n              <option value='2'>2 Months</option>\r\n              <option value='3'>3 Months</option>\r\n              <option value='4'>4 Months</option>\r\n              <option value='5'>5 Months</option>\r\n              <option value='6'>6 Months</option>\r\n              <option value='12'>12 Months</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* DATE RELEASED */}\r\n          <div>\r\n            <label htmlFor='date_released'>Date Released:</label>\r\n            <input\r\n              type='date'\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              placeholder='Date Released'\r\n              name='date_released'\r\n              value={date_released}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* MATURITY DATE */}\r\n          <div>\r\n            <label htmlFor='maturity_date'>Maturity Date:</label>\r\n            <input\r\n              type='date'\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              placeholder='Maturity Date'\r\n              name='maturity_date'\r\n              value={maturity_date}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* BUTTONS */}\r\n          <div className='mt-10'>\r\n            <button\r\n              className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-auto ml-auto '\r\n              type='submit'\r\n            >\r\n              Add New Loan\r\n            </button>\r\n            <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-1/5 ml-10'>\r\n              <Link to={`/loans`}>Cancel</Link>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddLoans;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\payments\\ListPayments.jsx",["291","292","293","294","295"],[],"import { DeleteForever, Edit, Update } from '@mui/icons-material';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst PaymentsInfo = () => {\r\n  const [payments, setPayments] = useState([]);\r\n\r\n  const location = useLocation();\r\n\r\n  const clientId = location.pathname.split('/')[2];\r\n\r\n  const GetPayments = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8000/payments/${clientId}`,\r\n        {\r\n          method: 'GET',\r\n          headers: { Authorization: localStorage.getItem('token') },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setPayments(parseRes);\r\n      // console.log(parseRes);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  console.log(payments);\r\n\r\n  // Delete loan Function\r\n  // async function deleteLoan(id) {\r\n  //   try {\r\n  //     await fetch(`http://localhost:8000/loans/${id}`, {\r\n  //       method: 'DELETE',\r\n  //       headers: { Authorization: localStorage.getItem('token') },\r\n  //     });\r\n\r\n  //     setLoans(loans.filter((loan) => loan.id !== id));\r\n  //   } catch (error) {\r\n  //     console.log(error.message);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    GetPayments();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* Payment History */}\r\n      <div>\r\n        <div className='flex items-center justify-between border-y-2 mt-5'>\r\n          <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\r\n            Payment History\r\n          </h3>\r\n          {/* <button\r\n            className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mb-2 rounded focus:outline-none focus:shadow-outline w-auto mt-2'\r\n            // onClick={() => deleteLoan(loan.id)}\r\n          >\r\n            <Link to={`/addPayments/${clientId}`}>Add Payments</Link>\r\n          </button> */}\r\n        </div>\r\n        <div>{/* {payments.map} */}</div>\r\n        <table className='table-fixed text-center '>\r\n          <thead>\r\n            <tr>\r\n              <th className='w-1/1 px-1 py-2 text-gray-600'>Voucher</th>\r\n              <th className='w-1/5 px-1 py-2 text-gray-600'>Amount</th>\r\n              <th className='w-1/5 px-4 py-2 text-gray-600'>Collection Date</th>\r\n              <th className='w-1/5 px-1 py-2 text-gray-600'>New Balance</th>\r\n              <th className='w-1/5 px-4 py-2 text-gray-600'>Collected By:</th>\r\n              <th className='w-1/5 px-4 py-2 text-gray-600'>Method</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {payments.length <= 0 ? (\r\n              <tr className='border px-4 py-2 bg-red-50'>\r\n                <td></td>\r\n                <td></td>\r\n                <td className='px-4 py-2 bg-red-50'>No Loan Data</td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n            ) : (\r\n              payments.map((payment, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td className='border px-4 py-2 bg-gray-50'>\r\n                      {payment.loan_id}\r\n                    </td>\r\n                    <td className='border px-4 py-2 '>₱ {payment.amount}</td>\r\n                    <td className='border px-4 py-2 bg-gray-50'>\r\n                      {new Date(payment.collection_date).toDateString()}\r\n                    </td>\r\n                    <td className='border px-4 py-2'>\r\n                      ₱ {payment.new_balance}\r\n                    </td>\r\n                    <td className='border px-4 py-2 bg-gray-50'>\r\n                      {payment.collected_by}\r\n                    </td>\r\n                    {/* <td className='border px-4 py-2 bg-gray-50'>\r\n                      {payment.method}\r\n                    </td> */}\r\n                    <td className='border px-4 py-2 '>\r\n                      {payment.method === 'ATM' ? (\r\n                        <span className=' bg-green-500 text-white px-4 py-1 rounded-md'>\r\n                          {payment.method}\r\n                        </span>\r\n                      ) : payment.method === 'OTC' ? (\r\n                        <span className=' bg-yellow-300 text-white px-4 py-1 rounded-md'>\r\n                          {payment.method}\r\n                        </span>\r\n                      ) : payment.method === 'ONLINE BANK' ? (\r\n                        <span className=' bg-orange-300 text-white px-4 py-1 rounded-md'>\r\n                          {payment.method}\r\n                        </span>\r\n                      ) : (\r\n                        <span className=' bg-blue-500 text-white px-4 py-1 rounded-md'>\r\n                          {payment.method}\r\n                        </span>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentsInfo;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\payments\\AddPayments.jsx",["296","297","298","299","300","301"],[],"import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\nimport LoanInfo from '../loans/Loan';\r\nimport UpdateBalance from './UpdateBalance';\r\nimport PaymentLoansInfo from './PaymentLoanInfo';\r\n\r\nconst AddPayments = ({ loanId, balance, clientId }) => {\r\n  console.log(loanId);\r\n  console.log(balance);\r\n  console.log(clientId);\r\n  const [inputs, setInputs] = useState({\r\n    amount: '',\r\n    collection_date: '',\r\n    collected_by: '',\r\n    new_balance: '',\r\n    method: '',\r\n    client_id: clientId,\r\n    loan_id: loanId,\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const {\r\n    amount,\r\n    collection_date,\r\n    collected_by,\r\n    new_balance,\r\n    method,\r\n    client_id,\r\n    loan_id,\r\n  } = inputs;\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = {\r\n        amount,\r\n        collection_date,\r\n        collected_by,\r\n        new_balance,\r\n        method,\r\n        client_id,\r\n        loan_id,\r\n      };\r\n\r\n      const response = await fetch(`http://localhost:8000/payments/${loanId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          Authorization: localStorage.getItem('token'),\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      console.log(parseRes);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  console.log(clientId);\r\n  console.log(client_id);\r\n  const n_balance = balance - amount;\r\n  console.log(n_balance);\r\n\r\n  return (\r\n    <div className='flex'>\r\n      {/* Add Loan */}\r\n      <div className='  py-2 flex-1 flex flex-col px-2'>\r\n        {/* LOANS INFO */}\r\n        {/* <PaymentLoansInfo /> */}\r\n\r\n        <div className='flex items-center justify-between border-y-2 mt-5'>\r\n          <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\r\n            Loan Payment\r\n          </h3>\r\n        </div>\r\n\r\n        {/* FORM */}\r\n        <form className='grid grid-cols-2 p-2 mt-2' onSubmit={onSubmit}>\r\n          <div className='flex w-full '>\r\n            {/* CLIENT ID */}\r\n\r\n            <div className='w-auto'>\r\n              <label htmlFor='client_id'>Client ID:</label>\r\n              <input\r\n                type='number'\r\n                className='block border border-grey-500 p-3 rounded mb-4 mr-5'\r\n                name='client_id'\r\n                value={clientId}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            {/* VOUCHER */}\r\n            <div className='w-auto'>\r\n              <label htmlFor='loan_id'>Voucher:</label>\r\n              <input\r\n                type='number'\r\n                className='block border border-grey-500 p-3 rounded mb-4'\r\n                placeholder='Voucher #'\r\n                name='loan_id'\r\n                value={loanId}\r\n                disabled\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* COLLECTION DATE */}\r\n          <div>\r\n            <label htmlFor='collection_date'>Collection Date:</label>\r\n            <input\r\n              type='date'\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              placeholder='Collection Date'\r\n              name='collection_date'\r\n              value={collection_date}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* AMOUNT */}\r\n          <div>\r\n            <label htmlFor='amount'>Amount:</label>\r\n            <input\r\n              type='number'\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              placeholder='Amount'\r\n              name='amount'\r\n              value={amount}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* COLLECTED BY */}\r\n          <div>\r\n            <label htmlFor='collected_by'>Collected By:</label>\r\n            <input\r\n              type='text'\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              placeholder='Collected by'\r\n              name='collected_by'\r\n              value={collected_by}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* NEW BALANCE */}\r\n          <div>\r\n            <label htmlFor='new_balance'>New Balances:</label>\r\n            <input\r\n              type='number'\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              name='new_balance'\r\n              value={balance - amount}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          {/* <UpdateBalance\r\n            amount={1600 - amount}\r\n            loan_id={loan_id}\r\n            change={(e) => onChange(e)}\r\n          /> */}\r\n\r\n          {/* METHOD */}\r\n          <div>\r\n            <label htmlFor='terms'>Method:</label>\r\n            <select\r\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n              name='method'\r\n              id='method'\r\n              value={method}\r\n              onChange={(e) => {\r\n                onChange(e);\r\n              }}\r\n            >\r\n              <option value='ATM'>ATM</option>\r\n              <option value='OTC'>OTC</option>\r\n              <option value='ONLINE BANK'>ONLINE BANK</option>\r\n              <option value='GCASH'>GCASH</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* BUTTONS */}\r\n          <div>\r\n            <button\r\n              className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-auto ml-auto '\r\n              type='submit'\r\n            >\r\n              Add Payment\r\n            </button>\r\n            {/* <UpdateBalance balance={new_balance} loan_id={loan_id} /> */}\r\n            <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-1/5 ml-10'>\r\n              <Link to={`/borrowers`}>Cancel</Link>\r\n            </button>\r\n            {/* <button\r\n              className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-1/5 ml-10'\r\n              onClick={() => updateLoan(loan_id)}\r\n            >\r\n              Update Balance\r\n            </button> */}\r\n          </div>\r\n\r\n          {/*  */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPayments;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\payments\\AllPayments.jsx",["302","303","304"],[],"import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport { DeleteForever, Edit, Update } from '@mui/icons-material';\r\nimport { Link } from 'react-router-dom';\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\n\r\nconst Payments = ({ setAuth }) => {\r\n  const [payments, setPayments] = useState([]);\r\n\r\n  const GetPayments = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/allPayments', {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setPayments(parseRes);\r\n      console.log(parseRes);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  // async function deleteLoan(id) {\r\n  //   try {\r\n  //     await fetch(`http://localhost:8000/loans/${id}`, {\r\n  //       method: 'DELETE',\r\n  //       headers: { Authorization: localStorage.getItem('token') },\r\n  //     });\r\n\r\n  //     setLoans(loans.filter((loan) => loan.id !== id));\r\n  //   } catch (error) {\r\n  //     console.log(error.message);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    GetPayments();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='flex w-full'>\r\n      <Sidebar />\r\n      {/* Loans Information */}\r\n      <div className='w-full mx-auto px-8 pt-6 pb-8 mb-4 bg-white shadow-md rounded '>\r\n        <div className='px-4 py-5 sm:px-6 bg-red-500'>\r\n          <h3 className='text-lg font-medium leading-6 text-white'>\r\n            Payments Report\r\n          </h3>\r\n          <p className='mt-1 max-w-2xl text-sm text-white'>\r\n            Summary of Collections and information.\r\n          </p>\r\n        </div>\r\n\r\n        <div>\r\n          <div className='flex items-center justify-between border-y-2 mt-5'>\r\n            <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\r\n              Payment Transactions\r\n            </h3>\r\n            <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mb-2 rounded focus:outline-none focus:shadow-outline w-auto mt-2'>\r\n              <Link to='/borrowers'>Add Payment</Link>\r\n            </button>\r\n          </div>\r\n          <table className='table-fixed text-center '>\r\n            <thead>\r\n              <tr>\r\n                <th className='w-1/1 px-1 py-2 text-gray-600'>ID</th>\r\n                <th className='w-1/6 px-1 py-2 text-gray-600'>Client Name</th>\r\n                <th className='w-1/1 px-1 py-2 text-gray-600'>Voucher ID</th>\r\n                <th className='w-1/6 px-1 py-2 text-gray-600'>Amount</th>\r\n                <th className='w-1/6 px-1 py-2 text-gray-600'>\r\n                  Collection Date\r\n                </th>\r\n                <th className='w-1/6 px-1 py-2 text-gray-600'>Collected By:</th>\r\n                <th className='w-1/6 px-1 py-2 text-gray-600'>New Balance</th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Method</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {payments.length <= 0 ? (\r\n                <tr className='border px-4 py-2 bg-red-50'>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td className='px-4 py-2 bg-red-50'>No Payment</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n              ) : (\r\n                payments.map((payment, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td className='border px-4 py-2 bg-gray-50'>\r\n                        {payment.id}\r\n                      </td>\r\n                      <td className='border px-4 py-2'>\r\n                        {payment.firstname + ' ' + payment.lastname}\r\n                      </td>\r\n                      <td className='border px-4 py-2'> {payment.loan_id}</td>\r\n                      <td className='border px-4 py-2 bg-gray-50'>\r\n                        ₱ {payment.amount}\r\n                      </td>\r\n                      <td className='border px-4 py-2 '>\r\n                        {new Date(payment.collection_date).toDateString()}\r\n                      </td>\r\n                      <td className='border px-4 py-2 bg-gray-50'>\r\n                        {payment.collected_by}\r\n                      </td>\r\n                      <td className='border px-4 py-2 '>\r\n                        ₱ {payment.new_balance}\r\n                      </td>\r\n\r\n                      {/* <td className='border px-4 py-2 bg-gray-50'>\r\n                        {payment.method}\r\n                      </td> */}\r\n\r\n                      <td className='border px-4 py-2 '>\r\n                        {payment.method === 'ATM' ? (\r\n                          <span className=' bg-green-500 text-white px-4 py-1 rounded-md'>\r\n                            {payment.method}\r\n                          </span>\r\n                        ) : payment.method === 'OTC' ? (\r\n                          <span className=' bg-yellow-300 text-white px-4 py-1 rounded-md'>\r\n                            {payment.method}\r\n                          </span>\r\n                        ) : payment.method === 'ONLINE BANK' ? (\r\n                          <span className=' bg-orange-300 text-white px-4 py-1 rounded-md'>\r\n                            {payment.method}\r\n                          </span>\r\n                        ) : (\r\n                          <span className=' bg-blue-500 text-white px-4 py-1 rounded-md'>\r\n                            {payment.method}\r\n                          </span>\r\n                        )}\r\n                      </td>\r\n                      {/* <td className='border px-4 py-2'>\r\n                        <button\r\n                          className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mb-2 rounded focus:outline-none focus:shadow-outline w-full text-sm'\r\n                          onClick={() => deleteLoan(loan.id)}\r\n                        >\r\n                          <DeleteForever className='text-lg' />\r\n                        </button>\r\n                        <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full '>\r\n                          <Link to={`/editLoan/${loan.id}`}>\r\n                            <Edit className='text-sm' />\r\n                          </Link>\r\n                        </button>\r\n                      </td> */}\r\n                    </tr>\r\n                  );\r\n                })\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\payments\\UpdateBalance.jsx",["305","306","307","308","309","310","311"],[],"// async function updateLoan(id) {\r\n//   try {\r\n//     await fetch(`http://localhost:8000/updateBalance/${id}`, {\r\n//       method: 'PATCH',\r\n//       headers: { Authorization: localStorage.getItem('token') },\r\n//     });\r\n\r\n//     // setInputs({\r\n//     //   amount: '',\r\n//     //   collection_date: '',\r\n//     //   collected_by: '',\r\n//     //   new_balance: '',\r\n//     //   method: '',\r\n//     //   loan_id: '',\r\n//     // });\r\n//   } catch (error) {\r\n//     console.log(error.message);\r\n//   }\r\n// }\r\n\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\nimport LoanInfo from '../loans/Loan';\r\nimport PaymentLoansInfo from './PaymentLoanInfo';\r\n\r\nconst UpdateBalance = ({ amount, loan_id, change }) => {\r\n  const [loans, setLoans] = useState([]);\r\n  const [loanId, setLoanId] = useState();\r\n\r\n  const location = useLocation();\r\n\r\n  const clientId = location.pathname.split('/')[2];\r\n  const GetLoans = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/loans/${clientId}`, {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setLoans(parseRes);\r\n      // console.log(loans);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  console.log(50);\r\n  // console.log(loans[Number(loan_id)]);\r\n  console.log(loans[0].id);\r\n\r\n  useEffect(() => {\r\n    GetLoans();\r\n  }, []);\r\n\r\n  // async function updateLoan(id) {\r\n  //   try {\r\n  //     await fetch(`http://localhost:8000/updateBalance/${loan_id}`, {\r\n  //       method: 'PATCH',\r\n  //       headers: { Authorization: localStorage.getItem('token') },\r\n  //     });\r\n  //   } catch (error) {\r\n  //     console.log(error.message);\r\n  //   }\r\n  // }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label htmlFor='outstanding_balance'>Outstanding Balance:</label>\r\n        <input\r\n          type='number'\r\n          className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n          value={50000}\r\n          disabled\r\n        />\r\n\r\n        <label htmlFor='new_balance'>New Balance:</label>\r\n        <input\r\n          type='number'\r\n          className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\r\n          disabled\r\n          name='new_balance'\r\n          value={0 - amount}\r\n          onChange={change}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateBalance;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\messages\\Message.jsx",["312","313","314"],[],"import React from 'react';\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\nimport Account from '../borrowers/Account';\r\nimport GetBorrowers from './GetBorrowers';\r\nimport emailjs from 'emailjs-com';\r\n\r\nexport default function Message({ email }) {\r\n  function sendEmail(e) {\r\n    e.preventDefault();\r\n\r\n    emailjs\r\n      .sendForm(\r\n        'service_2kyejr4',\r\n        'Loan_Approval',\r\n        e.target,\r\n        'mDqAo3YVF6cq60oy7'\r\n      )\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text);\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n        }\r\n      );\r\n    e.target.reset();\r\n  }\r\n\r\n  return (\r\n    <div className='flex'>\r\n      <div className='flex w-full'>\r\n        <div class='w-full px-8  bg-white '>\r\n          <div class=' py-2.5 '>\r\n            <form onSubmit={sendEmail} class='space-y-8'>\r\n              <div>\r\n                <label\r\n                  for='email'\r\n                  class='block mb-2 text-sm font-medium text-gray-900 mt-5'\r\n                >\r\n                  Client Email\r\n                </label>\r\n                <input\r\n                  type='email'\r\n                  id='email'\r\n                  value={email}\r\n                  name='email'\r\n                  class='shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 '\r\n                  placeholder='Choose Email'\r\n                  required\r\n                  // disabled\r\n                />\r\n              </div>\r\n              <div>\r\n                <label\r\n                  for='subject'\r\n                  class='block mb-2 text-sm font-medium text-gray-900'\r\n                >\r\n                  Subject\r\n                </label>\r\n                <input\r\n                  type='text'\r\n                  name='subject'\r\n                  id='subject'\r\n                  class='block p-3 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 shadow-sm focus:ring-primary-500 focus:border-primary-500'\r\n                  placeholder='Type your subject here...'\r\n                  required\r\n                />\r\n              </div>\r\n              <div class='sm:col-span-2'>\r\n                <label\r\n                  for='message'\r\n                  class='block mb-2 text-sm font-medium text-gray-900'\r\n                >\r\n                  Your message\r\n                </label>\r\n                <textarea\r\n                  name='message'\r\n                  id='message'\r\n                  rows='6'\r\n                  class='block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg shadow-sm border border-gray-300 focus:ring-primary-500 focus:border-primary-500'\r\n                  placeholder='Write your message...'\r\n                ></textarea>\r\n              </div>\r\n              <button\r\n                type='submit'\r\n                class='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline '\r\n              >\r\n                Send message\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\messages\\GetBorrowers.jsx",["315","316","317","318","319"],[],"import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Check,\r\n  DeleteForever,\r\n  Edit,\r\n  EmailOutlined,\r\n  PreviewOutlined,\r\n  VisibilityOutlined,\r\n} from '@mui/icons-material';\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\nimport Message from './Message';\r\n\r\nconst GetBorrowers = ({ setAuth }) => {\r\n  const [clients, setClients] = useState([]);\r\n  const [emails, setEmail] = useState('');\r\n\r\n  const getClients = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/allClients', {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n      // console.log(parseRes);\r\n\r\n      setClients(parseRes);\r\n      // setUser(parseRes.firstname);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // console.log(clients[0].email);\r\n  // setEmail(clients.em)\r\n\r\n  // Select EMAIL CLIENT Function\r\n  async function selectClient(email) {\r\n    try {\r\n      await fetch(`http://localhost:8000/email/${email}`, {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      setEmail(clients.map((client) => email));\r\n      console.log(emails[0]);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getClients();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='text-gray-900'>\r\n      <div className='px-4 py-5 sm:px-6 bg-red-500'>\r\n        <h3 className='text-lg font-medium leading-6 text-white'>Send Email</h3>\r\n        <p className='mt-1 max-w-2xl text-sm text-white'>\r\n          Update your client with their loan.\r\n        </p>\r\n      </div>\r\n      {/* INFO */}\r\n      <h3 className='text-lg font-medium leading-6 text-gray my-2 px-1 py-2 border-y-2 mt-5'>\r\n        Clients Contact Info\r\n      </h3>\r\n      <table className='table-fixed text-center'>\r\n        <thead className='border-y-2 mt-5'>\r\n          <tr className='border-y-2 mt-10'>\r\n            <th className='w-1/1 px-1 py-2 text-gray-600'>ID</th>\r\n            <th className='w-1/4 px-1 py-2 text-gray-600'>Full Name</th>\r\n            <th className='w-1/4 px-1 py-2 text-gray-600'>Contact Number</th>\r\n            <th className='w-1/4 px-4 py-2 text-gray-600'>Address</th>\r\n            <th className='w-1/4 px-1 py-2 text-gray-600'>Email</th>\r\n            <th className='w-1/1 px-1 py-2 text-gray-600'>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {clients.length <= 0 ? (\r\n            <tr className='border px-4 py-2 bg-red-50'>\r\n              <td></td>\r\n              <td></td>\r\n              <td className='px-4 py-2 bg-red-50'>No Client Data</td>\r\n              <td></td>\r\n              <td></td>\r\n            </tr>\r\n          ) : (\r\n            clients.map((client, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td className='border px-4 py-2 bg-gray-50'>{client.id}</td>\r\n                  <td className='border px-4 py-2 '>\r\n                    {client.firstname + ' ' + client.lastname}{' '}\r\n                  </td>\r\n                  <td className='border px-4 py-2 bg-gray-50'>\r\n                    {client.contactnumber}\r\n                  </td>\r\n                  <td className='border px-4 py-2'>{client.address}</td>\r\n                  <td className='border px-4 py-2 bg-gray-50'>\r\n                    {client.email}\r\n                  </td>\r\n                  <td className='border px-4 py-2'>\r\n                    {/* <button onClick={() => deleteClient(client.id)}>\r\n                        <DeleteOutlined />\r\n                      </button>\r\n                      <button className=''>\r\n                        <Link to={'/borrower/' + client.id}>\r\n                          <Create />\r\n                        </Link>\r\n                      </button> */}\r\n\r\n                    <div className='flex'>\r\n                      <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full mr-2 '>\r\n                        <Link to={`/Borrower/${client.id}`}>\r\n                          <VisibilityOutlined className='text-sm' />\r\n                        </Link>\r\n                        {/* <Borrower clientId={client.id} /> */}\r\n                      </button>\r\n                      <button\r\n                        className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full '\r\n                        onClick={() => selectClient(client.email)}\r\n                      >\r\n                        <Check />\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h3 className='text-lg font-medium leading-6 text-gray my-2 px-1 py-2 border-y-2 mt-5'>\r\n        Email Form\r\n      </h3>\r\n      <Message email={emails[0]} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetBorrowers;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\messages\\EmailPage.jsx",[],[],"E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\loans\\OneLoan.jsx",["320","321","322","323","324","325"],[],"import { DeleteForever, Edit, Update } from '@mui/icons-material';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport PaymentsInfo from '../payments/ListPayments';\r\n\r\nconst OneLoan = () => {\r\n  const [loans, setLoans] = useState([]);\r\n\r\n  const location = useLocation();\r\n\r\n  const loanID = location.pathname.split('/')[2];\r\n\r\n  const GetLoans = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/loan/${loanID}`, {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setLoans(parseRes);\r\n      console.log(loans);\r\n      // console.log(loanId);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  // console.log(loanId);\r\n\r\n  useEffect(() => {\r\n    GetLoans();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* Loans Information */}\r\n      <div className='w-full pt-6 pb-8 mb-4 bg-white shadow-md rounded '>\r\n        {/* Active Loans */}\r\n        <div>\r\n          <div className='flex items-center justify-between border-y-2'>\r\n            <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\r\n              Loan Info\r\n            </h3>\r\n          </div>\r\n          <table className='table-fixed text-center '>\r\n            <thead>\r\n              <tr>\r\n                <th className='w-1/1 px-1 py-2 text-gray-600'>Voucher</th>\r\n                <th className='w-1/6 px-1 py-2 text-gray-600'>Loan Type</th>\r\n                <th className='w-1/6 px-1 py-2 text-gray-600'>\r\n                  Outstanding Balance\r\n                </th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Gross Loan</th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Amortization</th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Terms</th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Date Released</th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {loans.length <= 0 ? (\r\n                <tr className='border px-4 py-2 bg-red-50'>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td className='px-4 py-2 bg-red-50'>No Loan Data</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n              ) : (\r\n                <tr>\r\n                  <td className='border px-4 py-2 bg-gray-50'>{loans.id}</td>\r\n                  <td className='border px-4 py-2'>{loans.type}</td>\r\n                  <td className='border px-4 py-2 bg-gray-50'>\r\n                    ₱ {loans.balance}\r\n                  </td>\r\n                  <td className='border px-4 py-2 '>₱ {loans.gross_loan}</td>\r\n                  <td className='border px-4 py-2 bg-gray-50'>\r\n                    ₱ {loans.amort}\r\n                  </td>\r\n                  <td className='border px-4 py-2 '>{loans.terms} month/s</td>\r\n                  <td className='border px-4 py-2 bg-gray-50'>\r\n                    {new Date(loans.date_released).toDateString()}\r\n                  </td>\r\n                  <td className='border px-4 py-2 '>\r\n                    {loans.status === 'Approved' ||\r\n                    loans.status === 'Fully Paid' ? (\r\n                      <span className=' bg-green-500 text-white px-4 py-1 rounded-md'>\r\n                        {loans.status}\r\n                      </span>\r\n                    ) : loans.status === 'Declined' ? (\r\n                      <span className=' bg-red-400 text-white px-4 py-1 rounded-md'>\r\n                        {loans.status}\r\n                      </span>\r\n                    ) : loans.status === 'Pending' ? (\r\n                      <span className=' bg-yellow-300 text-white px-4 py-1 rounded-md'>\r\n                        {loans.status}\r\n                      </span>\r\n                    ) : (\r\n                      <span className=' bg-orange-300 text-white px-4 py-1 rounded-md'>\r\n                        {loans.status}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OneLoan;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\payments\\PaymentLoanInfo.jsx",["326","327","328","329","330","331","332"],[],"import { DeleteForever, Edit, Update } from '@mui/icons-material';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\nimport AddPayments from './AddPayments';\r\nimport PaymentsInfo from './ListPayments';\r\n\r\nconst PaymentLoansInfo = () => {\r\n  const [loans, setLoans] = useState([]);\r\n\r\n  const location = useLocation();\r\n\r\n  const clientId = location.pathname.split('/')[2];\r\n  const loanId = location.pathname.split('/')[3];\r\n\r\n  console.log(loanId);\r\n  console.log(clientId);\r\n  const GetLoans = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/loan/${loanId}`, {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setLoans(parseRes);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  async function updateLoan() {\r\n    try {\r\n      await fetch(`http://localhost:8000/loan/${loanId}`, {\r\n        method: 'PATCH',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n  // console.log(loanId);\r\n\r\n  // setBalance(loans[0].balance);\r\n  // console.log(loans.client_id);\r\n\r\n  useEffect(() => {\r\n    GetLoans();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='flex'>\r\n      <div>\r\n        <Sidebar />\r\n      </div>\r\n\r\n      <div className='w-full mx-auto px-8 pt-6 pb-8 mb-4 bg-white shadow-md rounded'>\r\n        {/* TITLE */}\r\n        <div className='px-4 py-5 sm:px-6 bg-red-500 mb-5'>\r\n          <h3 className='text-lg font-medium leading-6 text-white'>\r\n            Payment for Loan Voucher #{loanId}\r\n          </h3>\r\n          <p className='mt-1 max-w-2xl text-sm text-white'>\r\n            Add a payment for a client\r\n          </p>\r\n        </div>\r\n\r\n        {/* Loans Information */}\r\n        <div>\r\n          <div className='flex items-center justify-between border-y-2 mt-5'>\r\n            <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\r\n              Client's Loans\r\n            </h3>\r\n            {/* <button\r\n              className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-auto ml-auto '\r\n              onClick={() => updateLoan()}\r\n            >\r\n              Update Loan\r\n            </button> */}\r\n          </div>\r\n          <table className='table-fixed text-center '>\r\n            <thead>\r\n              <tr>\r\n                <th className='w-1/1 px-1 py-2 text-gray-600'>Voucher</th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Gross Loan</th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>\r\n                  Outstanding Balance\r\n                </th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Amortization</th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Terms</th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Date Released</th>\r\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {loans.length <= 0 ? (\r\n                <tr className='border px-4 py-2 bg-red-50'>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td className='px-4 py-2 bg-red-50'>No Loan Data</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n              ) : (\r\n                <tr>\r\n                  <td className='border px-4 py-2 bg-gray-50'>{loans.id}</td>\r\n                  <td className='border px-4 py-2 '>₱ {loans.gross_loan}</td>\r\n                  <td className='border px-4 py-2 '>₱ {loans.balance}</td>\r\n                  <td className='border px-4 py-2 bg-gray-50'>\r\n                    ₱ {loans.amort}\r\n                  </td>\r\n                  <td className='border px-4 py-2 '>{loans.terms} month/s</td>\r\n                  <td className='border px-4 py-2 bg-gray-50'>\r\n                    {new Date(loans.date_released).toDateString()}\r\n                  </td>\r\n                  <td className='border px-4 py-2 '>\r\n                    {loans.status === 'Approved' ||\r\n                    loans.status === 'Fully Paid' ? (\r\n                      <span className=' bg-green-500 text-white px-4 py-1 rounded-md'>\r\n                        {loans.status}\r\n                      </span>\r\n                    ) : loans.status === 'Declined' ? (\r\n                      <span className=' bg-red-400 text-white px-4 py-1 rounded-md'>\r\n                        {loans.status}\r\n                      </span>\r\n                    ) : loans.status === 'Pending' ? (\r\n                      <span className=' bg-yellow-300 text-white px-4 py-1 rounded-md'>\r\n                        {loans.status}\r\n                      </span>\r\n                    ) : (\r\n                      <span className=' bg-orange-300 text-white px-4 py-1 rounded-md'>\r\n                        {loans.status}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Payment Form */}\r\n        <AddPayments\r\n          loanId={loanId}\r\n          balance={loans.balance}\r\n          clientId={clientId}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentLoansInfo;\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\bottom\\BotWidget.jsx",[],[],"E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\top\\TopWidget.jsx",[],[],"E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\top\\ClientsWidget.jsx",["333","334"],[],"import { AddBox, PermIdentity } from '@mui/icons-material';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function ClientsWidget() {\r\n  const [clients, setClients] = useState([]);\r\n\r\n  const getClients = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/allClients', {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n      // console.log(parseRes);\r\n\r\n      setClients(parseRes);\r\n      console.log(clients);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getClients();\r\n  }, []);\r\n\r\n  console.log(clients.length);\r\n\r\n  return (\r\n    <div className='w-full'>\r\n      {/* CLIENTS */}\r\n      <div\r\n        className='mt-5 p-8 rounded-xl border border-t-4 border-t-red-500 cursor-pointer hover:bg-red-500\r\n        hover:text-white hover:text-base transition duration-150\r\n        ease-in-out shadow-md'\r\n      >\r\n        <div className='flex justify-between items-center'>\r\n          <span className='text-xl'>Borrowers</span>\r\n          {/* <button className='text-sm font-medium  py-2 px-2  rounded-md cursor-pointer '>\r\n            <AddBox sx={{ color: 'rgba(239,68,68)' }} />\r\n          </button> */}\r\n        </div>\r\n        <div className='my-3 '>\r\n          <span className='text-3xl'>\r\n            <PermIdentity fontSize='30px' /> {clients.length}\r\n          </span>\r\n        </div>\r\n        <span className='text-base text-gray-500'>Total Clients Serviced</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\top\\PaymentsWidget.jsx",["335"],[],"import { ReceiptLong } from '@mui/icons-material';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function PaymentsWidget() {\r\n  const [payments, setPayments] = useState([]);\r\n  const [amounts, setAmounts] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const getPayments = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/allPayments', {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      // console.log(parseRes);\r\n\r\n      setPayments(parseRes);\r\n\r\n      setAmounts(\r\n        payments.map((payment) => {\r\n          return Number(payment.amount);\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPayments();\r\n    setTotal(amounts.reduce((acc, val) => acc + val, 0));\r\n  }, [amounts]);\r\n\r\n  // console.log(total);\r\n  //   In this example, we have an array state that is initially set to [1, 2, 3, 4, 5], and a sum state that is initially set to 0. We use the useEffect hook to listen for changes to the array state, and whenever the array state changes, we calculate the new sum by using the reduce method to iterate through the array and add up all the values. The calculated sum is then set to the sum state using the setSum function.\r\n\r\n  // In the return we are displaying the array and sum value in JSX.\r\n\r\n  // function getTotalPayments(payments) {\r\n  //   let total = 0;\r\n  //   payments.map()\r\n\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   const interval = setInterval(() => {\r\n  //     getPayments();\r\n  //   }, 1000);\r\n  //   return () => clearInterval(interval);\r\n  // }, []);\r\n\r\n  // console.log(\r\n  //   payments.forEach((payment) => {\r\n  //     payment.reduce(function (a, b) {\r\n  //       return a + b;\r\n  //     });\r\n  //   })\r\n  // );\r\n\r\n  // const allPayments = payments.map((payment) => {\r\n  //   return Number(payment.amount);\r\n  // });\r\n\r\n  // const total = allPayments.reduce(function (a, b) {\r\n  //   return a + b;\r\n  // });\r\n\r\n  // setTotal(\r\n  //   allPayments.reduce(function (a, b) {\r\n  //     return a + b;\r\n  //   })\r\n  // );\r\n\r\n  // console.log(\r\n  //   allPayments.reduce(function (a, b) {\r\n  //     return a + b;\r\n  //   })\r\n  // );\r\n\r\n  return (\r\n    <div className='w-full'>\r\n      {/* Payments */}\r\n      <div\r\n        className='w-full  mt-5 p-8 rounded-xl cursor-pointer border border-t-4 border-t-red-500 hover:bg-red-500\r\n        hover:text-white hover:text-base transition duration-150\r\n        ease-in-out shadow-md'\r\n      >\r\n        <span className='text-xl '>Payments</span>\r\n        <div className='my-3'>\r\n          <span className='text-3xl'>\r\n            <ReceiptLong className='mr-3' /> ₱\r\n            {new Intl.NumberFormat().format(total)}\r\n            {/* {payments.length} */}\r\n          </span>\r\n        </div>\r\n        <span className='text-base text-gray-500'>\r\n          Total Payments Collected\r\n        </span>\r\n      </div>\r\n      {/*  */}\r\n    </div>\r\n  );\r\n}\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\top\\LoansWidget.jsx",["336"],[],"import { CreditScore } from '@mui/icons-material';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function LoansWidget() {\r\n  const [loans, setLoans] = useState([]);\r\n  const [gross, setGross] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const getLoans = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/allLoans', {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n      // console.log(parseRes);\r\n\r\n      setLoans(parseRes);\r\n\r\n      setGross(\r\n        loans.map((loan) => {\r\n          return Number(loan.gross_loan);\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getLoans();\r\n    setTotal(gross.reduce((acc, val) => acc + val, 0));\r\n  }, [gross]);\r\n\r\n  // console.log(loans.length);\r\n  return (\r\n    <div className='w-full'>\r\n      {/* Loans */}\r\n      <div\r\n        className='w-full  mt-5 p-8 rounded-xl cursor-pointer border border-t-4 border-t-red-500 hover:bg-red-500\r\n        hover:text-white hover:text-base transition duration-150\r\n        ease-in-out shadow-md'\r\n      >\r\n        <span className='text-xl'>Loans</span>\r\n        <div className='my-3'>\r\n          <span className='text-3xl'>\r\n            <CreditScore className='mr-3' />\r\n            {/* {loans.length} */}₱ {new Intl.NumberFormat().format(total)}\r\n          </span>\r\n        </div>\r\n        <span className='text-base text-gray-500'>\r\n          Total Loans Transactions\r\n        </span>\r\n      </div>\r\n      {/*  */}\r\n    </div>\r\n  );\r\n}\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\bottom\\DatesWidget.jsx",["337","338","339","340","341","342","343"],[],"import {\r\n  AddBox,\r\n  PermIdentity,\r\n  VisibilityOutlined,\r\n  MailOutline,\r\n} from '@mui/icons-material';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport { Edit } from '@mui/icons-material';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function DatesWidget() {\r\n  const [dates, setDates] = useState([]);\r\n  const [sortedDates, setSortedDates] = useState([]);\r\n\r\n  const getDates = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/allLoans', {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n      // console.log(parseRes);\r\n\r\n      setDates(parseRes);\r\n      console.log(dates);\r\n\r\n      // const handleSort = () => {\r\n      //   const mat_dates = [\r\n      //     dates.map((date) => {\r\n      //       return Number(dates.maturity_date);\r\n      //     }),\r\n      //   ]; // copy of original array\r\n      //   const sorted = mat_dates.sort((a, b) => new Date(a) - new Date(b));\r\n      //   setSortedDates(sorted);\r\n      //   console.log(handleSort());\r\n      // };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getDates();\r\n  }, []);\r\n\r\n  // console.log(dates.sort((a, b) => a.maturity_date - b.maturity_date));\r\n  // console.log(dates);\r\n  console.log(\r\n    dates.sort((a, b) => {\r\n      return new Date(a.maturity_date) - new Date(b.maturity_date);\r\n    })\r\n  );\r\n\r\n  return (\r\n    <div className='w-full'>\r\n      {/* CLIENTS */}\r\n      <div className='mt-5 p-8 rounded-xl border border-t-4 border-t-red-500 cursor-pointer shadow-md'>\r\n        <div className='flex justify-between items-center'>\r\n          <div className='w-full'>\r\n            <h3 className='text-xl mb-5 border-b-2'>Maturity Date</h3>\r\n            <table className='table-fixed text-center w-full'>\r\n              <thead className=''>\r\n                <tr className=''>\r\n                  <th className='w-1/1 px-1 py-2 '>Customer</th>\r\n                  <th className='w-1/1 px-1 py-2 '>Date</th>\r\n                  <th className='w-1/1 px-1 py-2 '>Balance</th>\r\n                  <th className='w-1/6 px-1 py-2 '>Email</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {/* {dates.map((date, index) => {\r\n                  <tr className='widgetLgTr'>\r\n                    <td className='flex items-center font-semibold'>\r\n                      <span className='widgetLgName'></span>\r\n                    </td>\r\n                    <td className='widgetLgDate'>{date.maturity_date}</td>\r\n                    <td className='widgetLgAmount'>{date.balance}</td>\r\n                    <td className='widgetLgStatus'>{date.status}</td>\r\n                  </tr>; */}\r\n                {dates.length <= 0 ? (\r\n                  <tr className='border px-4 py-2 bg-red-50'>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td className='px-4 py-2 bg-red-50'>No Loan Data</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                  </tr>\r\n                ) : (\r\n                  dates.map((date, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td className='border px-4 py-2'>\r\n                          {date.firstname + ' ' + date.lastname}\r\n                        </td>\r\n\r\n                        <td className='border px-4 py-2 bg-gray-50'>\r\n                          {new Date(date.maturity_date).toDateString()}\r\n                        </td>\r\n                        <td className='border px-4 py-2 bg-gray-50'>\r\n                          ₱ {date.balance}\r\n                        </td>\r\n                        <td className='border px-4 py-2'>\r\n                          <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full '>\r\n                            <Link to={`/emailClient`}>\r\n                              <MailOutline className='text-sm' />\r\n                            </Link>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Codes\\Github\\Lending App\\client\\src\\components\\dashboard\\pages\\home\\bottom\\ApprovalWidget.jsx",["344","345","346"],[],"import { VisibilityOutlined } from '@mui/icons-material';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport { Edit } from '@mui/icons-material';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ApprovalWidget() {\r\n  const [loans, setLoans] = useState([]);\r\n\r\n  const getLoans = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/allLoans', {\r\n        method: 'GET',\r\n        headers: { Authorization: localStorage.getItem('token') },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n      // console.log(parseRes);\r\n\r\n      setLoans(parseRes);\r\n      console.log(loans);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getLoans();\r\n  }, []);\r\n\r\n  console.log(loans.sort((a, b) => a.maturity_date - b.maturity_date));\r\n\r\n  return (\r\n    <div className='w-full '>\r\n      {/* CLIENTS */}\r\n      <div className=' mt-5 p-8 rounded-xl border border-t-4 border-t-red-500 cursor-pointer shadow-md'>\r\n        <div className='flex justify-between items-center'>\r\n          <div className='w-full'>\r\n            <h3 className='text-xl mb-5 border-b-2'>Loans For Approval</h3>\r\n            <table className='table-fixed text-center w-full'>\r\n              <thead>\r\n                <tr className='w-full'>\r\n                  <th className='w-1/1 px-1 py-2'>Gross Loan</th>\r\n                  <th className='w-1/1 px-1 py-2'>Status</th>\r\n                  <th className='w-1/6 px-1 py-2'>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {/* {loans.map((loan, index) => {\r\n                  <tr className='widgetLgTr'>\r\n                    <td className='flex items-center font-semibold'>\r\n                      <span className='widgetLgName'></span>\r\n                    </td>\r\n                    <td className='widgetLgDate'>{loan.maturity_date}</td>\r\n                    <td className='widgetLgAmount'>{loan.balance}</td>\r\n                    <td className='widgetLgStatus'>{loan.status}</td>\r\n                  </tr>; */}\r\n                {loans.length <= 0 ? (\r\n                  <tr className='border px-4 py-2 bg-red-50'>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td className='px-4 py-2 bg-red-50'>No Loan Data</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                  </tr>\r\n                ) : (\r\n                  loans.map((loan, index) => {\r\n                    if (loan.status === 'Pending')\r\n                      return (\r\n                        <tr key={index}>\r\n                          <td className='border px-4 py-2 bg-gray-50'>\r\n                            ₱ {loan.gross_loan}\r\n                          </td>\r\n                          <td className='border px-4 py-2 bg-gray-50'>\r\n                            <span className=' bg-yellow-300 text-white px-4 py-1 rounded-md'>\r\n                              {loan.status}\r\n                            </span>\r\n                          </td>\r\n                          <td className='border px-4 py-2'>\r\n                            <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full '>\r\n                              <Link to={`/editLoan/${loan.id}`}>\r\n                                <VisibilityOutlined className='text-sm' />\r\n                              </Link>\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                  })\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"347","severity":1,"message":"348","line":12,"column":8,"nodeType":"349","messageId":"350","endLine":12,"endColumn":15},{"ruleId":"347","severity":1,"message":"351","line":28,"column":8,"nodeType":"349","messageId":"350","endLine":28,"endColumn":19},{"ruleId":"347","severity":1,"message":"352","line":30,"column":8,"nodeType":"349","messageId":"350","endLine":30,"endColumn":15},{"ruleId":"347","severity":1,"message":"353","line":3,"column":10,"nodeType":"349","messageId":"350","endLine":3,"endColumn":18},{"ruleId":"347","severity":1,"message":"354","line":1,"column":17,"nodeType":"349","messageId":"350","endLine":1,"endColumn":25},{"ruleId":"347","severity":1,"message":"355","line":2,"column":10,"nodeType":"349","messageId":"350","endLine":2,"endColumn":19},{"ruleId":"347","severity":1,"message":"356","line":3,"column":10,"nodeType":"349","messageId":"350","endLine":3,"endColumn":14},{"ruleId":"347","severity":1,"message":"357","line":10,"column":3,"nodeType":"349","messageId":"350","endLine":10,"endColumn":14},{"ruleId":"347","severity":1,"message":"358","line":11,"column":3,"nodeType":"349","messageId":"350","endLine":11,"endColumn":7},{"ruleId":"359","severity":1,"message":"360","line":158,"column":15,"nodeType":"361","endLine":161,"endColumn":16},{"ruleId":"359","severity":1,"message":"360","line":246,"column":15,"nodeType":"361","endLine":249,"endColumn":16},{"ruleId":"359","severity":1,"message":"360","line":338,"column":15,"nodeType":"361","endLine":338,"endColumn":64},{"ruleId":"362","severity":1,"message":"363","line":421,"column":15,"nodeType":"361","endLine":424,"endColumn":16},{"ruleId":"359","severity":1,"message":"360","line":439,"column":15,"nodeType":"361","endLine":439,"endColumn":64},{"ruleId":"362","severity":1,"message":"363","line":523,"column":15,"nodeType":"361","endLine":526,"endColumn":16},{"ruleId":"359","severity":1,"message":"360","line":541,"column":15,"nodeType":"361","endLine":541,"endColumn":64},{"ruleId":"362","severity":1,"message":"363","line":625,"column":15,"nodeType":"361","endLine":628,"endColumn":16},{"ruleId":"362","severity":1,"message":"363","line":645,"column":13,"nodeType":"361","endLine":648,"endColumn":14},{"ruleId":"362","severity":1,"message":"363","line":664,"column":19,"nodeType":"361","endLine":664,"endColumn":56},{"ruleId":"362","severity":1,"message":"363","line":669,"column":19,"nodeType":"361","endLine":669,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":674,"column":19,"nodeType":"361","endLine":674,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":679,"column":19,"nodeType":"361","endLine":679,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":691,"column":19,"nodeType":"361","endLine":691,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":696,"column":19,"nodeType":"361","endLine":696,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":701,"column":19,"nodeType":"361","endLine":701,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":706,"column":19,"nodeType":"361","endLine":706,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":718,"column":19,"nodeType":"361","endLine":718,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":723,"column":19,"nodeType":"361","endLine":723,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":728,"column":19,"nodeType":"361","endLine":728,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":740,"column":19,"nodeType":"361","endLine":740,"endColumn":56},{"ruleId":"362","severity":1,"message":"363","line":745,"column":19,"nodeType":"361","endLine":745,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":750,"column":19,"nodeType":"361","endLine":750,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":755,"column":19,"nodeType":"361","endLine":755,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":767,"column":19,"nodeType":"361","endLine":767,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":772,"column":19,"nodeType":"361","endLine":772,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":777,"column":19,"nodeType":"361","endLine":777,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":782,"column":19,"nodeType":"361","endLine":782,"endColumn":55},{"ruleId":"362","severity":1,"message":"363","line":792,"column":13,"nodeType":"361","endLine":795,"endColumn":14},{"ruleId":"362","severity":1,"message":"363","line":804,"column":17,"nodeType":"361","endLine":804,"endColumn":72},{"ruleId":"362","severity":1,"message":"363","line":820,"column":17,"nodeType":"361","endLine":820,"endColumn":72},{"ruleId":"362","severity":1,"message":"363","line":836,"column":17,"nodeType":"361","endLine":836,"endColumn":72},{"ruleId":"362","severity":1,"message":"363","line":848,"column":17,"nodeType":"361","endLine":848,"endColumn":72},{"ruleId":"362","severity":1,"message":"363","line":864,"column":17,"nodeType":"361","endLine":864,"endColumn":72},{"ruleId":"362","severity":1,"message":"363","line":156,"column":13,"nodeType":"361","endLine":159,"endColumn":14},{"ruleId":"362","severity":1,"message":"363","line":163,"column":13,"nodeType":"361","endLine":166,"endColumn":14},{"ruleId":"347","severity":1,"message":"354","line":1,"column":17,"nodeType":"349","messageId":"350","endLine":1,"endColumn":25},{"ruleId":"347","severity":1,"message":"355","line":2,"column":10,"nodeType":"349","messageId":"350","endLine":2,"endColumn":19},{"ruleId":"347","severity":1,"message":"364","line":6,"column":8,"nodeType":"349","messageId":"350","endLine":6,"endColumn":21},{"ruleId":"347","severity":1,"message":"365","line":7,"column":10,"nodeType":"349","messageId":"350","endLine":7,"endColumn":15},{"ruleId":"347","severity":1,"message":"355","line":2,"column":10,"nodeType":"349","messageId":"350","endLine":2,"endColumn":19},{"ruleId":"347","severity":1,"message":"366","line":12,"column":3,"nodeType":"349","messageId":"350","endLine":12,"endColumn":10},{"ruleId":"347","severity":1,"message":"367","line":16,"column":8,"nodeType":"349","messageId":"350","endLine":16,"endColumn":15},{"ruleId":"347","severity":1,"message":"368","line":19,"column":10,"nodeType":"349","messageId":"350","endLine":19,"endColumn":12},{"ruleId":"347","severity":1,"message":"369","line":19,"column":14,"nodeType":"349","messageId":"350","endLine":19,"endColumn":19},{"ruleId":"347","severity":1,"message":"370","line":24,"column":10,"nodeType":"349","messageId":"350","endLine":24,"endColumn":18},{"ruleId":"371","severity":1,"message":"372","line":65,"column":6,"nodeType":"373","endLine":65,"endColumn":8,"suggestions":"374"},{"ruleId":"347","severity":1,"message":"355","line":2,"column":10,"nodeType":"349","messageId":"350","endLine":2,"endColumn":19},{"ruleId":"347","severity":1,"message":"375","line":3,"column":16,"nodeType":"349","messageId":"350","endLine":3,"endColumn":24},{"ruleId":"347","severity":1,"message":"355","line":3,"column":10,"nodeType":"349","messageId":"350","endLine":3,"endColumn":19},{"ruleId":"347","severity":1,"message":"375","line":4,"column":16,"nodeType":"349","messageId":"350","endLine":4,"endColumn":24},{"ruleId":"347","severity":1,"message":"376","line":6,"column":3,"nodeType":"349","messageId":"350","endLine":6,"endColumn":7},{"ruleId":"347","severity":1,"message":"377","line":7,"column":3,"nodeType":"349","messageId":"350","endLine":7,"endColumn":18},{"ruleId":"347","severity":1,"message":"378","line":11,"column":8,"nodeType":"349","messageId":"350","endLine":11,"endColumn":16},{"ruleId":"347","severity":1,"message":"355","line":2,"column":10,"nodeType":"349","messageId":"350","endLine":2,"endColumn":19},{"ruleId":"347","severity":1,"message":"379","line":4,"column":31,"nodeType":"349","messageId":"350","endLine":4,"endColumn":37},{"ruleId":"347","severity":1,"message":"366","line":10,"column":3,"nodeType":"349","messageId":"350","endLine":10,"endColumn":10},{"ruleId":"347","severity":1,"message":"368","line":14,"column":10,"nodeType":"349","messageId":"350","endLine":14,"endColumn":12},{"ruleId":"347","severity":1,"message":"370","line":19,"column":10,"nodeType":"349","messageId":"350","endLine":19,"endColumn":18},{"ruleId":"371","severity":1,"message":"380","line":51,"column":6,"nodeType":"373","endLine":51,"endColumn":8,"suggestions":"381"},{"ruleId":"347","severity":1,"message":"382","line":4,"column":3,"nodeType":"349","messageId":"350","endLine":4,"endColumn":8},{"ruleId":"347","severity":1,"message":"383","line":5,"column":3,"nodeType":"349","messageId":"350","endLine":5,"endColumn":11},{"ruleId":"347","severity":1,"message":"379","line":6,"column":3,"nodeType":"349","messageId":"350","endLine":6,"endColumn":9},{"ruleId":"347","severity":1,"message":"384","line":15,"column":18,"nodeType":"349","messageId":"350","endLine":15,"endColumn":27},{"ruleId":"371","severity":1,"message":"385","line":55,"column":6,"nodeType":"373","endLine":55,"endColumn":8,"suggestions":"386"},{"ruleId":"347","severity":1,"message":"355","line":2,"column":10,"nodeType":"349","messageId":"350","endLine":2,"endColumn":19},{"ruleId":"347","severity":1,"message":"387","line":3,"column":16,"nodeType":"349","messageId":"350","endLine":3,"endColumn":27},{"ruleId":"347","severity":1,"message":"388","line":1,"column":10,"nodeType":"349","messageId":"350","endLine":1,"endColumn":23},{"ruleId":"347","severity":1,"message":"376","line":1,"column":25,"nodeType":"349","messageId":"350","endLine":1,"endColumn":29},{"ruleId":"347","severity":1,"message":"379","line":1,"column":31,"nodeType":"349","messageId":"350","endLine":1,"endColumn":37},{"ruleId":"347","severity":1,"message":"356","line":4,"column":10,"nodeType":"349","messageId":"350","endLine":4,"endColumn":14},{"ruleId":"371","severity":1,"message":"389","line":49,"column":6,"nodeType":"373","endLine":49,"endColumn":8,"suggestions":"390"},{"ruleId":"347","severity":1,"message":"355","line":2,"column":10,"nodeType":"349","messageId":"350","endLine":2,"endColumn":19},{"ruleId":"347","severity":1,"message":"387","line":3,"column":16,"nodeType":"349","messageId":"350","endLine":3,"endColumn":27},{"ruleId":"347","severity":1,"message":"348","line":4,"column":8,"nodeType":"349","messageId":"350","endLine":4,"endColumn":15},{"ruleId":"347","severity":1,"message":"391","line":5,"column":8,"nodeType":"349","messageId":"350","endLine":5,"endColumn":16},{"ruleId":"347","severity":1,"message":"392","line":6,"column":8,"nodeType":"349","messageId":"350","endLine":6,"endColumn":21},{"ruleId":"347","severity":1,"message":"393","line":7,"column":8,"nodeType":"349","messageId":"350","endLine":7,"endColumn":24},{"ruleId":"347","severity":1,"message":"388","line":4,"column":10,"nodeType":"349","messageId":"350","endLine":4,"endColumn":23},{"ruleId":"347","severity":1,"message":"376","line":4,"column":25,"nodeType":"349","messageId":"350","endLine":4,"endColumn":29},{"ruleId":"347","severity":1,"message":"379","line":4,"column":31,"nodeType":"349","messageId":"350","endLine":4,"endColumn":37},{"ruleId":"347","severity":1,"message":"356","line":23,"column":10,"nodeType":"349","messageId":"350","endLine":23,"endColumn":14},{"ruleId":"347","severity":1,"message":"348","line":24,"column":8,"nodeType":"349","messageId":"350","endLine":24,"endColumn":15},{"ruleId":"347","severity":1,"message":"391","line":25,"column":8,"nodeType":"349","messageId":"350","endLine":25,"endColumn":16},{"ruleId":"347","severity":1,"message":"393","line":26,"column":8,"nodeType":"349","messageId":"350","endLine":26,"endColumn":24},{"ruleId":"347","severity":1,"message":"394","line":30,"column":10,"nodeType":"349","messageId":"350","endLine":30,"endColumn":16},{"ruleId":"347","severity":1,"message":"384","line":30,"column":18,"nodeType":"349","messageId":"350","endLine":30,"endColumn":27},{"ruleId":"371","severity":1,"message":"385","line":57,"column":6,"nodeType":"373","endLine":57,"endColumn":8,"suggestions":"395"},{"ruleId":"347","severity":1,"message":"348","line":2,"column":8,"nodeType":"349","messageId":"350","endLine":2,"endColumn":15},{"ruleId":"347","severity":1,"message":"367","line":3,"column":8,"nodeType":"349","messageId":"350","endLine":3,"endColumn":15},{"ruleId":"347","severity":1,"message":"396","line":4,"column":8,"nodeType":"349","messageId":"350","endLine":4,"endColumn":20},{"ruleId":"347","severity":1,"message":"388","line":6,"column":3,"nodeType":"349","messageId":"350","endLine":6,"endColumn":16},{"ruleId":"347","severity":1,"message":"376","line":7,"column":3,"nodeType":"349","messageId":"350","endLine":7,"endColumn":7},{"ruleId":"347","severity":1,"message":"397","line":8,"column":3,"nodeType":"349","messageId":"350","endLine":8,"endColumn":16},{"ruleId":"347","severity":1,"message":"377","line":9,"column":3,"nodeType":"349","messageId":"350","endLine":9,"endColumn":18},{"ruleId":"347","severity":1,"message":"348","line":12,"column":8,"nodeType":"349","messageId":"350","endLine":12,"endColumn":15},{"ruleId":"347","severity":1,"message":"388","line":1,"column":10,"nodeType":"349","messageId":"350","endLine":1,"endColumn":23},{"ruleId":"347","severity":1,"message":"376","line":1,"column":25,"nodeType":"349","messageId":"350","endLine":1,"endColumn":29},{"ruleId":"347","severity":1,"message":"379","line":1,"column":31,"nodeType":"349","messageId":"350","endLine":1,"endColumn":37},{"ruleId":"347","severity":1,"message":"356","line":4,"column":10,"nodeType":"349","messageId":"350","endLine":4,"endColumn":14},{"ruleId":"347","severity":1,"message":"398","line":5,"column":8,"nodeType":"349","messageId":"350","endLine":5,"endColumn":20},{"ruleId":"371","severity":1,"message":"385","line":34,"column":6,"nodeType":"373","endLine":34,"endColumn":8,"suggestions":"399"},{"ruleId":"347","severity":1,"message":"388","line":1,"column":10,"nodeType":"349","messageId":"350","endLine":1,"endColumn":23},{"ruleId":"347","severity":1,"message":"376","line":1,"column":25,"nodeType":"349","messageId":"350","endLine":1,"endColumn":29},{"ruleId":"347","severity":1,"message":"379","line":1,"column":31,"nodeType":"349","messageId":"350","endLine":1,"endColumn":37},{"ruleId":"347","severity":1,"message":"356","line":4,"column":10,"nodeType":"349","messageId":"350","endLine":4,"endColumn":14},{"ruleId":"347","severity":1,"message":"398","line":7,"column":8,"nodeType":"349","messageId":"350","endLine":7,"endColumn":20},{"ruleId":"347","severity":1,"message":"400","line":34,"column":18,"nodeType":"349","messageId":"350","endLine":34,"endColumn":28},{"ruleId":"371","severity":1,"message":"385","line":51,"column":6,"nodeType":"373","endLine":51,"endColumn":8,"suggestions":"401"},{"ruleId":"347","severity":1,"message":"402","line":1,"column":10,"nodeType":"349","messageId":"350","endLine":1,"endColumn":16},{"ruleId":"371","severity":1,"message":"403","line":26,"column":6,"nodeType":"373","endLine":26,"endColumn":8,"suggestions":"404"},{"ruleId":"371","severity":1,"message":"405","line":36,"column":6,"nodeType":"373","endLine":36,"endColumn":15,"suggestions":"406"},{"ruleId":"371","severity":1,"message":"407","line":34,"column":6,"nodeType":"373","endLine":34,"endColumn":13,"suggestions":"408"},{"ruleId":"347","severity":1,"message":"402","line":2,"column":3,"nodeType":"349","messageId":"350","endLine":2,"endColumn":9},{"ruleId":"347","severity":1,"message":"409","line":3,"column":3,"nodeType":"349","messageId":"350","endLine":3,"endColumn":15},{"ruleId":"347","severity":1,"message":"410","line":4,"column":3,"nodeType":"349","messageId":"350","endLine":4,"endColumn":21},{"ruleId":"347","severity":1,"message":"376","line":10,"column":10,"nodeType":"349","messageId":"350","endLine":10,"endColumn":14},{"ruleId":"347","severity":1,"message":"411","line":15,"column":10,"nodeType":"349","messageId":"350","endLine":15,"endColumn":21},{"ruleId":"347","severity":1,"message":"412","line":15,"column":23,"nodeType":"349","messageId":"350","endLine":15,"endColumn":37},{"ruleId":"371","severity":1,"message":"413","line":46,"column":6,"nodeType":"373","endLine":46,"endColumn":8,"suggestions":"414"},{"ruleId":"347","severity":1,"message":"376","line":5,"column":10,"nodeType":"349","messageId":"350","endLine":5,"endColumn":14},{"ruleId":"371","severity":1,"message":"407","line":29,"column":6,"nodeType":"373","endLine":29,"endColumn":8,"suggestions":"415"},{"ruleId":"416","severity":1,"message":"417","line":70,"column":43,"nodeType":"418","messageId":"419","endLine":70,"endColumn":45},"no-unused-vars","'Sidebar' is defined but never used.","Identifier","unusedVar","'AddPayments' is defined but never used.","'Message' is defined but never used.","'Location' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'MailOutline' is defined but never used.","'Home' is defined but never used.","jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'ClientsWidget' is defined but never used.","'loans' is assigned a value but never used.","'Publish' is defined but never used.","'Account' is defined but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'username' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getClient'. Either include it or remove the dependency array.","ArrayExpression",["420"],"'Navigate' is defined but never used.","'Edit' is defined but never used.","'PreviewOutlined' is defined but never used.","'Borrower' is defined but never used.","'Update' is defined but never used.","React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.",["421"],"'Money' is defined but never used.","'Payments' is defined but never used.","'setLoanId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetLoans'. Either include it or remove the dependency array.",["422"],"'useLocation' is defined but never used.","'DeleteForever' is defined but never used.","React Hook useEffect has a missing dependency: 'GetPayments'. Either include it or remove the dependency array.",["423"],"'LoanInfo' is defined but never used.","'UpdateBalance' is defined but never used.","'PaymentLoansInfo' is defined but never used.","'loanId' is assigned a value but never used.",["424"],"'GetBorrowers' is defined but never used.","'EmailOutlined' is defined but never used.","'PaymentsInfo' is defined but never used.",["425"],"'updateLoan' is defined but never used.",["426"],"'AddBox' is defined but never used.","React Hook useEffect has a missing dependency: 'getClients'. Either include it or remove the dependency array.",["427"],"React Hook useEffect has a missing dependency: 'getPayments'. Either include it or remove the dependency array.",["428"],"React Hook useEffect has a missing dependency: 'getLoans'. Either include it or remove the dependency array.",["429"],"'PermIdentity' is defined but never used.","'VisibilityOutlined' is defined but never used.","'sortedDates' is assigned a value but never used.","'setSortedDates' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDates'. Either include it or remove the dependency array.",["430"],["431"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"436","fix":"440"},{"desc":"436","fix":"441"},{"desc":"436","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},"Update the dependencies array to be: [getClient]",{"range":"453","text":"454"},"Update the dependencies array to be: [getProfile]",{"range":"455","text":"456"},"Update the dependencies array to be: [GetLoans]",{"range":"457","text":"458"},"Update the dependencies array to be: [GetPayments]",{"range":"459","text":"460"},{"range":"461","text":"458"},{"range":"462","text":"458"},{"range":"463","text":"458"},"Update the dependencies array to be: [getClients]",{"range":"464","text":"465"},"Update the dependencies array to be: [amounts, getPayments]",{"range":"466","text":"467"},"Update the dependencies array to be: [getLoans, gross]",{"range":"468","text":"469"},"Update the dependencies array to be: [getDates]",{"range":"470","text":"471"},"Update the dependencies array to be: [getLoans]",{"range":"472","text":"473"},[2022,2024],"[getClient]",[1365,1367],"[getProfile]",[1367,1369],"[GetLoans]",[1304,1306],"[GetPayments]",[1567,1569],[922,924],[1413,1415],[707,709],"[getClients]",[950,959],"[amounts, getPayments]",[912,919],"[getLoans, gross]",[1268,1270],"[getDates]",[781,783],"[getLoans]"]